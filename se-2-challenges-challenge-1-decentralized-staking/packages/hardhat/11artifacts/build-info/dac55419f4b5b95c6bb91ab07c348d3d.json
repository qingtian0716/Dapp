{"id":"dac55419f4b5b95c6bb91ab07c348d3d","_format":"hh-sol-build-info-1","solcVersion":"0.8.4","solcLongVersion":"0.8.4+commit.c7e474f2","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/ExampleExternalContract.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract ExampleExternalContract {\n\t// 完成状态\n\tbool public completed;\n\t// 接收到的总金额\n\tuint256 public totalReceived;\n\n\t// 定义一个事件来记录每次调用 complete 方法时的详细信息\n\tevent Completed(address indexed sender, uint256 amount);\n\n\t/**\n\t * @notice 完成质押操作的函数，只能被调用一次\n\t * @dev 接收ETH并标记操作完成\n\t */\n\tfunction complete() external payable {\n\t\t// 更新完成状态\n\t\tcompleted = true;\n\n\t\t// 记录接收到的ETH金额（通过msg.value获取）\n\t\ttotalReceived += msg.value;\n\n\t\t// 触发事件，记录调用者地址和接收的金额\n\t\temit Completed(msg.sender, msg.value);\n\t}\n\n\t/**\n\t * @notice 用于获取合约的ETH余额\n\t * @return 合约的ETH余额\n\t */\n\tfunction getBalance(\n\t\taddress contractAddress\n\t) external view returns (uint256) {\n\t\treturn contractAddress.balance;\n\t}\n\n\t/**\n\t * @notice 允许合约直接接收ETH（安全后备）\n\t */\n\treceive() external payable {\n\t\t    // 检查合约是否有足够的余额支付奖励\n    require(address(this).balance >= msg.value, unicode\"账户余额不足,无法支付\");\n\t\ttotalReceived += msg.value;\n\t}\n\n    \n    /**\n     * @notice 将奖励转移给用户\n     * @param user 用户地址\n     * @param amount 奖励金额\n     */\n\tfunction payReward(address payable user, uint256 amount) external {\n\t\t// 检查合约是否有足够的余额支付奖励\n\t\trequire(address(this).balance >= amount, unicode\"奖励池余额不足,无法支付\");\n\n\t\t// 转移奖励给用户\n\t\t(bool sent,) = user.call{value: amount}(\"\");\n\t\trequire(sent, unicode\"将奖励转移给用户失败\");\n\t}\n}\n"},"contracts/Staker.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"./ExampleExternalContract.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n/**\n * @title Staker 合约\n * @notice 一个允许用户质押 ETH 的合约\n */\ncontract Staker {\n\t// 将持有质押资金的外部合约\n\tExampleExternalContract public exampleExternalContract;\n\n\t// NFT 凭证合约\n\t// StakingCertificate public certificate;\n\n\t// 用户质押资金的余额\n\tmapping(address => uint256) public balances;\n\n\t// 质押阈值\n\tuint256 public constant threshold = 1 ether;\n\n\t// 质押截止日期\n\tuint256 public deadline = block.timestamp + 3000 seconds;\n\n\t// 用户质押的时间\n\tmapping(address => uint256) public stakedAt;\n\n\t// uint256 public depositTimestamp = block.timestamp;\n\n\t// 合约事件\n\tevent Stake(address indexed sender, uint256 amount);\n\tevent Withdraw(address indexed user, uint256 amount);\n\tevent Reward(address indexed user, uint256 amount);\n\n\t// 合约修饰符\n\t/**\n\t * @notice 截止时间修饰符\n\t * @param requireReached 检查截止日期是否已到\n\t */\n\tmodifier deadlineReached(bool requireReached) {\n\t\tuint256 timeRemaining = timeLeft();\n\t\tif (requireReached) {\n\t\t\trequire(timeRemaining == 0, unicode\"截止日期尚未到达\");\n\t\t} else {\n\t\t\trequire(timeRemaining > 0, unicode\"截止日期已到达\");\n\t\t}\n\t\t_;\n\t}\n\n\t/**\n\t * @notice 外部合约状态修饰符\n\t */\n\tmodifier stakeNotCompleted() {\n\t\tbool completed = exampleExternalContract.completed();\n\t\trequire(!completed, unicode\"质押过程已完成\");\n\t\t_;\n\t}\n\n\t/**\n\t * @notice 合约构造函数\n\t * @param exampleExternalContractAddress 将持有质押资金的外部合约地址\n\t */\n\tconstructor(address payable exampleExternalContractAddress) {\n\t\texampleExternalContract = ExampleExternalContract(\n\t\t\texampleExternalContractAddress\n\t\t);\n\t}\n\n\t/**\n\t * @notice 执行外部合约的方法\n\t */\n\tfunction execute() public stakeNotCompleted deadlineReached(true) {\n\t\tuint256 contractBalance = address(this).balance;\n\n\t\t// 检查合约当前ETH是否大于或者等于设定的阈值\n\t\trequire(contractBalance >= threshold, unicode\"未达到阈值\");\n\n\t\t// 执行外部合约，将所有余额转移到合约\n\t\t(bool sent, ) = address(exampleExternalContract).call{\n\t\t\tvalue: contractBalance\n\t\t}(abi.encodeWithSignature(\"complete()\"));\n\t\trequire(sent, unicode\"调用外部合约失败\");  //安全审计修复\n\t}\n\n\t/**\n\t * @notice 更新用户余额的质押方法\n\t */\n\tfunction stake() public payable deadlineReached(false) stakeNotCompleted {\n\t\t// 检查用户的质押金额是否大于 0\n\t\trequire(msg.value > 0, unicode\"质押金额必须大于 0\");\n\n\t\t// 检查合约是否有足够的余额支付奖励\n\t\trequire(\n\t\t\taddress(this).balance >= msg.value,\n\t\t\tunicode\"账户余额不足,无法支付\"\n\t\t);\n\n\t\t// 更新用户质押时间\n\t\tstakedAt[msg.sender] = block.timestamp;\n\n\t\t// 更新用户余额\n\t\tbalances[msg.sender] += msg.value;\n\n\t\t// 触发事件，广播已正确质押了一些资金\n\t\temit Stake(msg.sender, msg.value);\n\t}\n\n\t/**\n\t * @notice 允许用户从合约中提取余额的方法，仅在截止日期已到但质押未完成时\n\t */\n\tfunction withdraw() public deadlineReached(true) {\n\t\tuint256 userBalance = balances[msg.sender];\n\n\t\t// 检查用户是否有余额可提取\n\t\trequire(userBalance > 0, unicode\"您没有可提取的余额\");\n\n\t\t// 检查外部合约是否已完成\n\t\trequire(\n\t\t\t!exampleExternalContract.completed(),\n\t\t\tunicode\"外部合约已完成，无法提取余额\"\n\t\t);\n\n\t\t// 重置用户余额\n\t\tbalances[msg.sender] = 0;\n\t\t// 重置用户质押时间\n\t\tstakedAt[msg.sender] = 0;\n\n\t\t// 将余额转回给用户\n\t\t(bool sent, ) = msg.sender.call{ value: userBalance }(\"\");\n\t\trequire(sent, unicode\"将用户余额返还给用户失败\");\n\n\t\t// 触发提取事件\n\t\temit Withdraw(msg.sender, userBalance);\n\t}\n\n\t/**\n\t * @notice 截止日期到达前剩余的秒数\n\t */\n\tfunction timeLeft() public view returns (uint256 timeleft) {\n\t\tif (block.timestamp >= deadline) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn deadline - block.timestamp;\n\t\t}\n\t}\n\n\t// 添加 `receive()` 特殊函数，接收 ETH 并调用 stake()\n\treceive() external payable {\n\t\tstake();\n\t}\n\n\t/**\n\t * @notice 前端通过获取用户的质押时间来实时计算奖励\n\t *  用户的奖励从前端传递到合约通过withdrawReward()方法提取\n\t */\n\tfunction withdrawReward(uint256 amount) public {\n\t\t// 检查外部合约是否已完成\n\t\trequire(\n\t\t\texampleExternalContract.completed(),\n\t\t\tunicode\"没有执行质押，无法提取奖励\"\n\t\t);\n\n\t\t// 重置用户的质押时间\n\t\t// stakedAt[msg.sender] = block.timestamp; 前端重置\n\n\t\t// 外部合约转账奖励\n\t\texampleExternalContract.payReward(payable(msg.sender), amount);\n\n\t\t// 触发提取事件\n\t\temit Reward(msg.sender, amount);\n\t}\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1039],"Strings":[174]},"id":175,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":175,"sourceUnit":1040,"src":"126:25:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"153:34:0","text":" @dev String operations."},"fullyImplemented":true,"id":174,"linearizedBaseContracts":[174],"name":"Strings","nameLocation":"196:7:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":6,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:0","nodeType":"VariableDeclaration","scope":174,"src":"210:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":4,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:0","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":5,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":9,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:0","nodeType":"VariableDeclaration","scope":174,"src":"270:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":8,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:0","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":56,"nodeType":"Block","src":"486:625:0","statements":[{"id":55,"nodeType":"UncheckedBlock","src":"496:609:0","statements":[{"assignments":[18],"declarations":[{"constant":false,"id":18,"mutability":"mutable","name":"length","nameLocation":"528:6:0","nodeType":"VariableDeclaration","scope":55,"src":"520:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":25,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":21,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"548:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":19,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"537:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1039_$","typeString":"type(library Math)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":876,"src":"537:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":22,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"537:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":23,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:0"},{"assignments":[27],"declarations":[{"constant":false,"id":27,"mutability":"mutable","name":"buffer","nameLocation":"586:6:0","nodeType":"VariableDeclaration","scope":55,"src":"572:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":26,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":32,"initialValue":{"arguments":[{"id":30,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"606:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":29,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":28,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":31,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"595:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:0"},{"assignments":[34],"declarations":[{"constant":false,"id":34,"mutability":"mutable","name":"ptr","nameLocation":"635:3:0","nodeType":"VariableDeclaration","scope":55,"src":"627:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":35,"nodeType":"VariableDeclarationStatement","src":"627:11:0"},{"AST":{"nodeType":"YulBlock","src":"708:67:0","statements":[{"nodeType":"YulAssignment","src":"726:35:0","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:0","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:0"},"nodeType":"YulFunctionCall","src":"745:15:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:0"},"nodeType":"YulFunctionCall","src":"733:28:0"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":27,"isOffset":false,"isSlot":false,"src":"737:6:0","valueSize":1},{"declaration":18,"isOffset":false,"isSlot":false,"src":"753:6:0","valueSize":1},{"declaration":34,"isOffset":false,"isSlot":false,"src":"726:3:0","valueSize":1}],"id":36,"nodeType":"InlineAssembly","src":"699:76:0"},{"body":{"id":51,"nodeType":"Block","src":"801:267:0","statements":[{"expression":{"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:0","subExpression":{"id":38,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"819:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":40,"nodeType":"ExpressionStatement","src":"819:5:0"},{"AST":{"nodeType":"YulBlock","src":"902:84:0","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:0"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:0","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:0"},"nodeType":"YulFunctionCall","src":"942:14:0"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:0"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:0"},"nodeType":"YulFunctionCall","src":"937:30:0"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:0"},"nodeType":"YulFunctionCall","src":"924:44:0"},"nodeType":"YulExpressionStatement","src":"924:44:0"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":6,"isOffset":false,"isSlot":false,"src":"958:8:0","valueSize":1},{"declaration":34,"isOffset":false,"isSlot":false,"src":"932:3:0","valueSize":1},{"declaration":12,"isOffset":false,"isSlot":false,"src":"946:5:0","valueSize":1}],"id":41,"nodeType":"InlineAssembly","src":"893:93:0"},{"expression":{"id":44,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":42,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"1003:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":43,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45,"nodeType":"ExpressionStatement","src":"1003:11:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":46,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"1036:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":47,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":50,"nodeType":"IfStatement","src":"1032:21:0","trueBody":{"id":49,"nodeType":"Break","src":"1048:5:0"}}]},"condition":{"hexValue":"74727565","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":52,"nodeType":"WhileStatement","src":"788:280:0"},{"expression":{"id":53,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1088:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":16,"id":54,"nodeType":"Return","src":"1081:13:0"}]}]},"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"320:90:0","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":57,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:0","nodeType":"FunctionDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"mutability":"mutable","name":"value","nameLocation":"441:5:0","nodeType":"VariableDeclaration","scope":57,"src":"433:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":57,"src":"471:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:0"},"scope":174,"src":"415:696:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":76,"nodeType":"Block","src":"1290:100:0","statements":[{"id":75,"nodeType":"UncheckedBlock","src":"1300:84:0","statements":[{"expression":{"arguments":[{"id":66,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"1343:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":69,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"1362:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":67,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"1350:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1039_$","typeString":"type(library Math)"}},"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":999,"src":"1350:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":65,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[77,153,173],"referencedDeclaration":153,"src":"1331:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":64,"id":74,"nodeType":"Return","src":"1324:49:0"}]}]},"documentation":{"id":58,"nodeType":"StructuredDocumentation","src":"1117:94:0","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":77,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:0","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"mutability":"mutable","name":"value","nameLocation":"1245:5:0","nodeType":"VariableDeclaration","scope":77,"src":"1237:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:0"},"returnParameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":77,"src":"1275:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":62,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:0"},"scope":174,"src":"1216:174:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":152,"nodeType":"Block","src":"1603:347:0","statements":[{"assignments":[88],"declarations":[{"constant":false,"id":88,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:0","nodeType":"VariableDeclaration","scope":152,"src":"1613:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":87,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":97,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":93,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":91,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":92,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"1649:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":90,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":89,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:0"},{"expression":{"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":98,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1670:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":100,"indexExpression":{"hexValue":"30","id":99,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":103,"nodeType":"ExpressionStatement","src":"1670:15:0"},{"expression":{"id":108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":104,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1695:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":106,"indexExpression":{"hexValue":"31","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":109,"nodeType":"ExpressionStatement","src":"1695:15:0"},{"body":{"id":138,"nodeType":"Block","src":"1765:83:0","statements":[{"expression":{"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":124,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1779:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":126,"indexExpression":{"id":125,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1786:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":127,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1791:8:0","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":131,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"1800:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:0","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":133,"nodeType":"ExpressionStatement","src":"1779:33:0"},{"expression":{"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"1826:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":137,"nodeType":"ExpressionStatement","src":"1826:11:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":118,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1753:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":139,"initializationExpression":{"assignments":[111],"declarations":[{"constant":false,"id":111,"mutability":"mutable","name":"i","nameLocation":"1733:1:0","nodeType":"VariableDeclaration","scope":139,"src":"1725:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":117,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":113,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"1741:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:0"},"loopExpression":{"expression":{"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:0","subExpression":{"id":121,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1762:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":123,"nodeType":"ExpressionStatement","src":"1760:3:0"},"nodeType":"ForStatement","src":"1720:128:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"1865:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":140,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1857:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":146,"nodeType":"ExpressionStatement","src":"1857:55:0"},{"expression":{"arguments":[{"id":149,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1936:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":147,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:0","typeDescriptions":{}}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":86,"id":151,"nodeType":"Return","src":"1922:21:0"}]},"documentation":{"id":78,"nodeType":"StructuredDocumentation","src":"1396:112:0","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":153,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":80,"mutability":"mutable","name":"value","nameLocation":"1542:5:0","nodeType":"VariableDeclaration","scope":153,"src":"1534:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":79,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":82,"mutability":"mutable","name":"length","nameLocation":"1557:6:0","nodeType":"VariableDeclaration","scope":153,"src":"1549:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":153,"src":"1588:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":84,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:0"},"scope":174,"src":"1513:437:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":172,"nodeType":"Block","src":"2175:76:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":166,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"2220:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":164,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:0","typeDescriptions":{}}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2212:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:0","typeDescriptions":{}}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":169,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"2228:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":161,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[77,153,173],"referencedDeclaration":153,"src":"2192:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":160,"id":171,"nodeType":"Return","src":"2185:59:0"}]},"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"1956:141:0","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":173,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:0","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"addr","nameLocation":"2131:4:0","nodeType":"VariableDeclaration","scope":173,"src":"2123:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":155,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":173,"src":"2160:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":158,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:0"},"scope":174,"src":"2102:149:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":175,"src":"188:2065:0","usedErrors":[]}],"src":"101:2153:0"},"id":0},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1039]},"id":1040,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":176,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"128:73:1","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1039,"linearizedBaseContracts":[1039],"name":"Math","nameLocation":"210:4:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":181,"members":[{"id":178,"name":"Down","nameLocation":"245:4:1","nodeType":"EnumValue","src":"245:4:1"},{"id":179,"name":"Up","nameLocation":"287:2:1","nodeType":"EnumValue","src":"287:2:1"},{"id":180,"name":"Zero","nameLocation":"318:4:1","nodeType":"EnumValue","src":"318:4:1"}],"name":"Rounding","nameLocation":"226:8:1","nodeType":"EnumDefinition","src":"221:122:1"},{"body":{"id":198,"nodeType":"Block","src":"480:37:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":191,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"497:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":192,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"501:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":195,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"509:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:1","trueExpression":{"id":194,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"505:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":190,"id":197,"nodeType":"Return","src":"490:20:1"}]},"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"349:59:1","text":" @dev Returns the largest of two numbers."},"id":199,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:1","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"a","nameLocation":"434:1:1","nodeType":"VariableDeclaration","scope":199,"src":"426:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"b","nameLocation":"445:1:1","nodeType":"VariableDeclaration","scope":199,"src":"437:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:1"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"471:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:1"},"scope":1039,"src":"413:104:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":216,"nodeType":"Block","src":"655:37:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":209,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"672:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":210,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"676:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":213,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"684:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:1","trueExpression":{"id":212,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"680:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":208,"id":215,"nodeType":"Return","src":"665:20:1"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"523:60:1","text":" @dev Returns the smallest of two numbers."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:1","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"a","nameLocation":"609:1:1","nodeType":"VariableDeclaration","scope":217,"src":"601:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"b","nameLocation":"620:1:1","nodeType":"VariableDeclaration","scope":217,"src":"612:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:1"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":217,"src":"646:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:1"},"scope":1039,"src":"588:104:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":239,"nodeType":"Block","src":"876:82:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":227,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"931:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":228,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"935:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"941:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":232,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"945:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":226,"id":238,"nodeType":"Return","src":"923:28:1"}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"698:102:1","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":240,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:1","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"a","nameLocation":"830:1:1","nodeType":"VariableDeclaration","scope":240,"src":"822:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"b","nameLocation":"841:1:1","nodeType":"VariableDeclaration","scope":240,"src":"833:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":221,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:1"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":240,"src":"867:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:1"},"scope":1039,"src":"805:153:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":264,"nodeType":"Block","src":"1228:123:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":250,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"1316:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":254,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"1330:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":258,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"1339:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:1","trueExpression":{"hexValue":"30","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":249,"id":263,"nodeType":"Return","src":"1309:35:1"}]},"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"964:188:1","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":265,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:1","nodeType":"FunctionDefinition","parameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"a","nameLocation":"1182:1:1","nodeType":"VariableDeclaration","scope":265,"src":"1174:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"b","nameLocation":"1193:1:1","nodeType":"VariableDeclaration","scope":265,"src":"1185:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:1"},"returnParameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":265,"src":"1219:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:1"},"scope":1039,"src":"1157:194:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":386,"nodeType":"Block","src":"1795:3797:1","statements":[{"id":385,"nodeType":"UncheckedBlock","src":"1805:3781:1","statements":[{"assignments":[278],"declarations":[{"constant":false,"id":278,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:1","nodeType":"VariableDeclaration","scope":385,"src":"2126:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":279,"nodeType":"VariableDeclarationStatement","src":"2126:13:1"},{"assignments":[281],"declarations":[{"constant":false,"id":281,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:1","nodeType":"VariableDeclaration","scope":385,"src":"2198:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":282,"nodeType":"VariableDeclarationStatement","src":"2198:13:1"},{"AST":{"nodeType":"YulBlock","src":"2278:157:1","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:1","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:1"},"nodeType":"YulFunctionCall","src":"2319:6:1"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:1"},"nodeType":"YulFunctionCall","src":"2306:20:1"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:1","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:1"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:1"},"nodeType":"YulFunctionCall","src":"2352:9:1"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:1"}]},{"nodeType":"YulAssignment","src":"2378:43:1","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:1"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:1"},"nodeType":"YulFunctionCall","src":"2391:14:1"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:1"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:1"},"nodeType":"YulFunctionCall","src":"2407:13:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:1"},"nodeType":"YulFunctionCall","src":"2387:34:1"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:1"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":278,"isOffset":false,"isSlot":false,"src":"2343:5:1","valueSize":1},{"declaration":278,"isOffset":false,"isSlot":false,"src":"2399:5:1","valueSize":1},{"declaration":278,"isOffset":false,"isSlot":false,"src":"2414:5:1","valueSize":1},{"declaration":281,"isOffset":false,"isSlot":false,"src":"2378:5:1","valueSize":1},{"declaration":268,"isOffset":false,"isSlot":false,"src":"2313:1:1","valueSize":1},{"declaration":268,"isOffset":false,"isSlot":false,"src":"2356:1:1","valueSize":1},{"declaration":270,"isOffset":false,"isSlot":false,"src":"2316:1:1","valueSize":1},{"declaration":270,"isOffset":false,"isSlot":false,"src":"2359:1:1","valueSize":1}],"id":283,"nodeType":"InlineAssembly","src":"2269:166:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":284,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"2516:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":292,"nodeType":"IfStatement","src":"2512:75:1","trueBody":{"id":291,"nodeType":"Block","src":"2528:59:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":287,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"2553:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":288,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2561:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":276,"id":290,"nodeType":"Return","src":"2546:26:1"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":294,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2697:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":295,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"2711:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":293,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2689:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"2689:28:1"},{"assignments":[300],"declarations":[{"constant":false,"id":300,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:1","nodeType":"VariableDeclaration","scope":385,"src":"2973:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":301,"nodeType":"VariableDeclarationStatement","src":"2973:17:1"},{"AST":{"nodeType":"YulBlock","src":"3013:291:1","statements":[{"nodeType":"YulAssignment","src":"3082:38:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:1"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:1"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:1"},"nodeType":"YulFunctionCall","src":"3095:25:1"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:1"}]},{"nodeType":"YulAssignment","src":"3202:41:1","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:1"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:1"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:1"},"nodeType":"YulFunctionCall","src":"3222:20:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:1"},"nodeType":"YulFunctionCall","src":"3211:32:1"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:1"}]},{"nodeType":"YulAssignment","src":"3260:30:1","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:1"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:1"},"nodeType":"YulFunctionCall","src":"3269:21:1"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:1"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":272,"isOffset":false,"isSlot":false,"src":"3108:11:1","valueSize":1},{"declaration":278,"isOffset":false,"isSlot":false,"src":"3236:5:1","valueSize":1},{"declaration":278,"isOffset":false,"isSlot":false,"src":"3260:5:1","valueSize":1},{"declaration":278,"isOffset":false,"isSlot":false,"src":"3273:5:1","valueSize":1},{"declaration":281,"isOffset":false,"isSlot":false,"src":"3202:5:1","valueSize":1},{"declaration":281,"isOffset":false,"isSlot":false,"src":"3215:5:1","valueSize":1},{"declaration":300,"isOffset":false,"isSlot":false,"src":"3082:9:1","valueSize":1},{"declaration":300,"isOffset":false,"isSlot":false,"src":"3225:9:1","valueSize":1},{"declaration":300,"isOffset":false,"isSlot":false,"src":"3280:9:1","valueSize":1},{"declaration":268,"isOffset":false,"isSlot":false,"src":"3102:1:1","valueSize":1},{"declaration":270,"isOffset":false,"isSlot":false,"src":"3105:1:1","valueSize":1}],"id":302,"nodeType":"InlineAssembly","src":"3004:300:1"},{"assignments":[304],"declarations":[{"constant":false,"id":304,"mutability":"mutable","name":"twos","nameLocation":"3619:4:1","nodeType":"VariableDeclaration","scope":385,"src":"3611:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":312,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":305,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"3626:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:1","subExpression":{"id":306,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"3642:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:1"},{"AST":{"nodeType":"YulBlock","src":"3681:362:1","statements":[{"nodeType":"YulAssignment","src":"3746:37:1","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:1"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:1"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:1"},"nodeType":"YulFunctionCall","src":"3761:22:1"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:1"}]},{"nodeType":"YulAssignment","src":"3850:25:1","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:1"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:1"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:1"},"nodeType":"YulFunctionCall","src":"3859:16:1"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:1"}]},{"nodeType":"YulAssignment","src":"3990:39:1","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:1","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:1"},"nodeType":"YulFunctionCall","src":"4006:12:1"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:1"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:1"},"nodeType":"YulFunctionCall","src":"4002:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:1","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:1"},"nodeType":"YulFunctionCall","src":"3998:31:1"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:1"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":272,"isOffset":false,"isSlot":false,"src":"3746:11:1","valueSize":1},{"declaration":272,"isOffset":false,"isSlot":false,"src":"3765:11:1","valueSize":1},{"declaration":278,"isOffset":false,"isSlot":false,"src":"3850:5:1","valueSize":1},{"declaration":278,"isOffset":false,"isSlot":false,"src":"3863:5:1","valueSize":1},{"declaration":304,"isOffset":false,"isSlot":false,"src":"3778:4:1","valueSize":1},{"declaration":304,"isOffset":false,"isSlot":false,"src":"3870:4:1","valueSize":1},{"declaration":304,"isOffset":false,"isSlot":false,"src":"3990:4:1","valueSize":1},{"declaration":304,"isOffset":false,"isSlot":false,"src":"4013:4:1","valueSize":1},{"declaration":304,"isOffset":false,"isSlot":false,"src":"4020:4:1","valueSize":1}],"id":313,"nodeType":"InlineAssembly","src":"3672:371:1"},{"expression":{"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":314,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"4109:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":315,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4118:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":316,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"4126:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":319,"nodeType":"ExpressionStatement","src":"4109:21:1"},{"assignments":[321],"declarations":[{"constant":false,"id":321,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:1","nodeType":"VariableDeclaration","scope":385,"src":"4448:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":328,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":323,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"4471:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":329,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4704:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":331,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"4719:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":332,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4733:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":336,"nodeType":"ExpressionStatement","src":"4704:36:1"},{"expression":{"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":337,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4773:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":339,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"4788:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":340,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4802:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":344,"nodeType":"ExpressionStatement","src":"4773:36:1"},{"expression":{"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":345,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4843:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":347,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"4858:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":348,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4872:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":352,"nodeType":"ExpressionStatement","src":"4843:36:1"},{"expression":{"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":353,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4913:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":355,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"4928:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":356,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4942:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":360,"nodeType":"ExpressionStatement","src":"4913:36:1"},{"expression":{"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":361,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4983:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":363,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"4998:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":364,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"5012:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":368,"nodeType":"ExpressionStatement","src":"4983:36:1"},{"expression":{"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":369,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"5054:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":371,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"5069:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":372,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"5083:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":376,"nodeType":"ExpressionStatement","src":"5054:36:1"},{"expression":{"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"5524:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":378,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5533:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":379,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"5541:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":382,"nodeType":"ExpressionStatement","src":"5524:24:1"},{"expression":{"id":383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"5569:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":276,"id":384,"nodeType":"Return","src":"5562:13:1"}]}]},"documentation":{"id":266,"nodeType":"StructuredDocumentation","src":"1357:305:1","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":387,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:1","nodeType":"FunctionDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"x","nameLocation":"1700:1:1","nodeType":"VariableDeclaration","scope":387,"src":"1692:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"y","nameLocation":"1719:1:1","nodeType":"VariableDeclaration","scope":387,"src":"1711:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:1","nodeType":"VariableDeclaration","scope":387,"src":"1730:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:1"},"returnParameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"mutability":"mutable","name":"result","nameLocation":"1787:6:1","nodeType":"VariableDeclaration","scope":387,"src":"1779:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:1"},"scope":1039,"src":"1667:3925:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":430,"nodeType":"Block","src":"5872:189:1","statements":[{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"result","nameLocation":"5890:6:1","nodeType":"VariableDeclaration","scope":430,"src":"5882:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":409,"initialValue":{"arguments":[{"id":405,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"5906:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":406,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5909:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":407,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"5912:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":404,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[387,431],"referencedDeclaration":387,"src":"5899:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5899:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":410,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"5938:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":411,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"5950:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$181_$","typeString":"type(enum Math.Rounding)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":179,"src":"5950:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"src":"5938:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":415,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"5972:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":416,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5975:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":417,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"5978:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":414,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:1","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":427,"nodeType":"IfStatement","src":"5934:98:1","trueBody":{"id":426,"nodeType":"Block","src":"5996:36:1","statements":[{"expression":{"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":422,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6010:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":425,"nodeType":"ExpressionStatement","src":"6010:11:1"}]}},{"expression":{"id":428,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6048:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":401,"id":429,"nodeType":"Return","src":"6041:13:1"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"5598:121:1","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":431,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:1","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"x","nameLocation":"5757:1:1","nodeType":"VariableDeclaration","scope":431,"src":"5749:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"y","nameLocation":"5776:1:1","nodeType":"VariableDeclaration","scope":431,"src":"5768:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":394,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:1","nodeType":"VariableDeclaration","scope":431,"src":"5787:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:1","nodeType":"VariableDeclaration","scope":431,"src":"5816:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"typeName":{"id":396,"nodeType":"UserDefinedTypeName","pathNode":{"id":395,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":181,"src":"5816:8:1"},"referencedDeclaration":181,"src":"5816:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:1"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":431,"src":"5863:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:1"},"scope":1039,"src":"5724:337:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":542,"nodeType":"Block","src":"6337:1585:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":439,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"6351:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":445,"nodeType":"IfStatement","src":"6347:45:1","trueBody":{"id":444,"nodeType":"Block","src":"6359:33:1","statements":[{"expression":{"hexValue":"30","id":442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":438,"id":443,"nodeType":"Return","src":"6373:8:1"}]}},{"assignments":[447],"declarations":[{"constant":false,"id":447,"mutability":"mutable","name":"result","nameLocation":"7079:6:1","nodeType":"VariableDeclaration","scope":542,"src":"7071:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":456,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":450,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7099:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":449,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[711,747],"referencedDeclaration":711,"src":"7094:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7094:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:1"},{"id":541,"nodeType":"UncheckedBlock","src":"7508:408:1","statements":[{"expression":{"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7532:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":458,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7542:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":459,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7551:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7555:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":463,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":467,"nodeType":"ExpressionStatement","src":"7532:35:1"},{"expression":{"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":468,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7581:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7591:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7600:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7604:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":478,"nodeType":"ExpressionStatement","src":"7581:35:1"},{"expression":{"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7630:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":480,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7640:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":481,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7649:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":482,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7653:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":489,"nodeType":"ExpressionStatement","src":"7630:35:1"},{"expression":{"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":490,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7679:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7689:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":492,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7698:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":493,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7702:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":500,"nodeType":"ExpressionStatement","src":"7679:35:1"},{"expression":{"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7728:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":502,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7738:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7747:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":504,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7751:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":511,"nodeType":"ExpressionStatement","src":"7728:35:1"},{"expression":{"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7777:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":513,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7787:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7796:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":515,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7800:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":522,"nodeType":"ExpressionStatement","src":"7777:35:1"},{"expression":{"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7826:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7836:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7845:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7849:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":533,"nodeType":"ExpressionStatement","src":"7826:35:1"},{"expression":{"arguments":[{"id":535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7886:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7894:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7898:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":534,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"7882:3:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7882:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":438,"id":540,"nodeType":"Return","src":"7875:30:1"}]}]},"documentation":{"id":432,"nodeType":"StructuredDocumentation","src":"6067:208:1","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":543,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:1","nodeType":"FunctionDefinition","parameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"a","nameLocation":"6302:1:1","nodeType":"VariableDeclaration","scope":543,"src":"6294:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:1"},"returnParameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":543,"src":"6328:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:1"},"scope":1039,"src":"6280:1642:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":578,"nodeType":"Block","src":"8098:161:1","statements":[{"id":577,"nodeType":"UncheckedBlock","src":"8108:145:1","statements":[{"assignments":[555],"declarations":[{"constant":false,"id":555,"mutability":"mutable","name":"result","nameLocation":"8140:6:1","nodeType":"VariableDeclaration","scope":577,"src":"8132:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":559,"initialValue":{"arguments":[{"id":557,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"8154:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":556,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[543,579],"referencedDeclaration":543,"src":"8149:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":560,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"8177:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":561,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"8187:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":562,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"8199:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$181_$","typeString":"type(enum Math.Rounding)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":179,"src":"8199:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"src":"8187:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":565,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"8214:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":566,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"8223:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":568,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"8232:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:1","trueExpression":{"hexValue":"31","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":574,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":553,"id":576,"nodeType":"Return","src":"8170:72:1"}]}]},"documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"7928:89:1","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":579,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:1","nodeType":"FunctionDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"a","nameLocation":"8044:1:1","nodeType":"VariableDeclaration","scope":579,"src":"8036:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:1","nodeType":"VariableDeclaration","scope":579,"src":"8047:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"typeName":{"id":548,"nodeType":"UserDefinedTypeName","pathNode":{"id":547,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":181,"src":"8047:8:1"},"referencedDeclaration":181,"src":"8047:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:1"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":579,"src":"8089:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":551,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:1"},"scope":1039,"src":"8022:237:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":710,"nodeType":"Block","src":"8444:922:1","statements":[{"assignments":[588],"declarations":[{"constant":false,"id":588,"mutability":"mutable","name":"result","nameLocation":"8462:6:1","nodeType":"VariableDeclaration","scope":710,"src":"8454:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":590,"initialValue":{"hexValue":"30","id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:1"},{"id":707,"nodeType":"UncheckedBlock","src":"8482:855:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8510:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":605,"nodeType":"IfStatement","src":"8506:99:1","trueBody":{"id":604,"nodeType":"Block","src":"8528:77:1","statements":[{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8546:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":599,"nodeType":"ExpressionStatement","src":"8546:13:1"},{"expression":{"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":600,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"8577:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":603,"nodeType":"ExpressionStatement","src":"8577:13:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8622:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":620,"nodeType":"IfStatement","src":"8618:96:1","trueBody":{"id":619,"nodeType":"Block","src":"8639:75:1","statements":[{"expression":{"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8657:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":614,"nodeType":"ExpressionStatement","src":"8657:12:1"},{"expression":{"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"8687:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":618,"nodeType":"ExpressionStatement","src":"8687:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8731:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":635,"nodeType":"IfStatement","src":"8727:96:1","trueBody":{"id":634,"nodeType":"Block","src":"8748:75:1","statements":[{"expression":{"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8766:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":629,"nodeType":"ExpressionStatement","src":"8766:12:1"},{"expression":{"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":630,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"8796:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":633,"nodeType":"ExpressionStatement","src":"8796:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8840:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":650,"nodeType":"IfStatement","src":"8836:96:1","trueBody":{"id":649,"nodeType":"Block","src":"8857:75:1","statements":[{"expression":{"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8875:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":644,"nodeType":"ExpressionStatement","src":"8875:12:1"},{"expression":{"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":645,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"8905:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":648,"nodeType":"ExpressionStatement","src":"8905:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8949:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":665,"nodeType":"IfStatement","src":"8945:93:1","trueBody":{"id":664,"nodeType":"Block","src":"8965:73:1","statements":[{"expression":{"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8983:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":659,"nodeType":"ExpressionStatement","src":"8983:11:1"},{"expression":{"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"9012:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":663,"nodeType":"ExpressionStatement","src":"9012:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"9055:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":680,"nodeType":"IfStatement","src":"9051:93:1","trueBody":{"id":679,"nodeType":"Block","src":"9071:73:1","statements":[{"expression":{"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"9089:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":674,"nodeType":"ExpressionStatement","src":"9089:11:1"},{"expression":{"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":675,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"9118:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":678,"nodeType":"ExpressionStatement","src":"9118:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"9161:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":695,"nodeType":"IfStatement","src":"9157:93:1","trueBody":{"id":694,"nodeType":"Block","src":"9177:73:1","statements":[{"expression":{"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"9195:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":689,"nodeType":"ExpressionStatement","src":"9195:11:1"},{"expression":{"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"9224:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":693,"nodeType":"ExpressionStatement","src":"9224:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"9267:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":706,"nodeType":"IfStatement","src":"9263:64:1","trueBody":{"id":705,"nodeType":"Block","src":"9283:44:1","statements":[{"expression":{"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"9301:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":704,"nodeType":"ExpressionStatement","src":"9301:11:1"}]}}]},{"expression":{"id":708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"9353:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":586,"id":709,"nodeType":"Return","src":"9346:13:1"}]},"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"8265:113:1","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":711,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:1","nodeType":"FunctionDefinition","parameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"value","nameLocation":"8405:5:1","nodeType":"VariableDeclaration","scope":711,"src":"8397:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":581,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:1"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":711,"src":"8435:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":584,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:1"},"scope":1039,"src":"8383:983:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":746,"nodeType":"Block","src":"9599:165:1","statements":[{"id":745,"nodeType":"UncheckedBlock","src":"9609:149:1","statements":[{"assignments":[723],"declarations":[{"constant":false,"id":723,"mutability":"mutable","name":"result","nameLocation":"9641:6:1","nodeType":"VariableDeclaration","scope":745,"src":"9633:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":727,"initialValue":{"arguments":[{"id":725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"9655:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":724,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[711,747],"referencedDeclaration":711,"src":"9650:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9650:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"9682:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":729,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"9692:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":730,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"9704:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$181_$","typeString":"type(enum Math.Rounding)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":179,"src":"9704:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"src":"9692:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":734,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"9724:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"9733:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:1","trueExpression":{"hexValue":"31","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":721,"id":744,"nodeType":"Return","src":"9675:72:1"}]}]},"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"9372:142:1","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":747,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:1","nodeType":"FunctionDefinition","parameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"value","nameLocation":"9541:5:1","nodeType":"VariableDeclaration","scope":747,"src":"9533:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":713,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":717,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:1","nodeType":"VariableDeclaration","scope":747,"src":"9548:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"typeName":{"id":716,"nodeType":"UserDefinedTypeName","pathNode":{"id":715,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":181,"src":"9548:8:1"},"referencedDeclaration":181,"src":"9548:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:1"},"returnParameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":747,"src":"9590:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":719,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:1"},"scope":1039,"src":"9519:245:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":875,"nodeType":"Block","src":"9951:828:1","statements":[{"assignments":[756],"declarations":[{"constant":false,"id":756,"mutability":"mutable","name":"result","nameLocation":"9969:6:1","nodeType":"VariableDeclaration","scope":875,"src":"9961:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":755,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":758,"initialValue":{"hexValue":"30","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:1"},{"id":872,"nodeType":"UncheckedBlock","src":"9989:761:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10017:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":775,"nodeType":"IfStatement","src":"10013:99:1","trueBody":{"id":774,"nodeType":"Block","src":"10034:78:1","statements":[{"expression":{"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10052:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":769,"nodeType":"ExpressionStatement","src":"10052:15:1"},{"expression":{"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":770,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10085:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":773,"nodeType":"ExpressionStatement","src":"10085:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10129:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":792,"nodeType":"IfStatement","src":"10125:99:1","trueBody":{"id":791,"nodeType":"Block","src":"10146:78:1","statements":[{"expression":{"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10164:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":786,"nodeType":"ExpressionStatement","src":"10164:15:1"},{"expression":{"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":787,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10197:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":790,"nodeType":"ExpressionStatement","src":"10197:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10241:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"10237:99:1","trueBody":{"id":808,"nodeType":"Block","src":"10258:78:1","statements":[{"expression":{"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10276:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":803,"nodeType":"ExpressionStatement","src":"10276:15:1"},{"expression":{"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":804,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10309:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":807,"nodeType":"ExpressionStatement","src":"10309:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10353:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":826,"nodeType":"IfStatement","src":"10349:96:1","trueBody":{"id":825,"nodeType":"Block","src":"10369:76:1","statements":[{"expression":{"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10387:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":820,"nodeType":"ExpressionStatement","src":"10387:14:1"},{"expression":{"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10419:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":824,"nodeType":"ExpressionStatement","src":"10419:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10462:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:1","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":843,"nodeType":"IfStatement","src":"10458:96:1","trueBody":{"id":842,"nodeType":"Block","src":"10478:76:1","statements":[{"expression":{"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10496:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:1","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":837,"nodeType":"ExpressionStatement","src":"10496:14:1"},{"expression":{"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":838,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10528:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":841,"nodeType":"ExpressionStatement","src":"10528:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10571:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:1","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":860,"nodeType":"IfStatement","src":"10567:96:1","trueBody":{"id":859,"nodeType":"Block","src":"10587:76:1","statements":[{"expression":{"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10605:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:1","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":854,"nodeType":"ExpressionStatement","src":"10605:14:1"},{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10637:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":858,"nodeType":"ExpressionStatement","src":"10637:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10680:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":871,"nodeType":"IfStatement","src":"10676:64:1","trueBody":{"id":870,"nodeType":"Block","src":"10696:44:1","statements":[{"expression":{"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":866,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10714:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":869,"nodeType":"ExpressionStatement","src":"10714:11:1"}]}}]},{"expression":{"id":873,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10766:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":754,"id":874,"nodeType":"Return","src":"10759:13:1"}]},"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"9770:114:1","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":876,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:1","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"value","nameLocation":"9912:5:1","nodeType":"VariableDeclaration","scope":876,"src":"9904:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:1"},"returnParameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"9942:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":752,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:1"},"scope":1039,"src":"9889:890:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":911,"nodeType":"Block","src":"11014:165:1","statements":[{"id":910,"nodeType":"UncheckedBlock","src":"11024:149:1","statements":[{"assignments":[888],"declarations":[{"constant":false,"id":888,"mutability":"mutable","name":"result","nameLocation":"11056:6:1","nodeType":"VariableDeclaration","scope":910,"src":"11048:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":892,"initialValue":{"arguments":[{"id":890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"11071:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":889,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[876,912],"referencedDeclaration":876,"src":"11065:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":893,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"11098:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":894,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"11108:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":895,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"11120:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$181_$","typeString":"type(enum Math.Rounding)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":179,"src":"11120:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"src":"11108:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":899,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"11139:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"11148:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:1","trueExpression":{"hexValue":"31","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":907,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":886,"id":909,"nodeType":"Return","src":"11091:71:1"}]}]},"documentation":{"id":877,"nodeType":"StructuredDocumentation","src":"10785:143:1","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":912,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:1","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"value","nameLocation":"10956:5:1","nodeType":"VariableDeclaration","scope":912,"src":"10948:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":878,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:1","nodeType":"VariableDeclaration","scope":912,"src":"10963:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"typeName":{"id":881,"nodeType":"UserDefinedTypeName","pathNode":{"id":880,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":181,"src":"10963:8:1"},"referencedDeclaration":181,"src":"10963:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:1"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":912,"src":"11005:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:1"},"scope":1039,"src":"10933:246:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":998,"nodeType":"Block","src":"11493:600:1","statements":[{"assignments":[921],"declarations":[{"constant":false,"id":921,"mutability":"mutable","name":"result","nameLocation":"11511:6:1","nodeType":"VariableDeclaration","scope":998,"src":"11503:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":920,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":923,"initialValue":{"hexValue":"30","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:1"},{"id":995,"nodeType":"UncheckedBlock","src":"11531:533:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11559:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":938,"nodeType":"IfStatement","src":"11555:98:1","trueBody":{"id":937,"nodeType":"Block","src":"11577:76:1","statements":[{"expression":{"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11595:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":932,"nodeType":"ExpressionStatement","src":"11595:13:1"},{"expression":{"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":933,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"11626:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":936,"nodeType":"ExpressionStatement","src":"11626:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11670:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":953,"nodeType":"IfStatement","src":"11666:95:1","trueBody":{"id":952,"nodeType":"Block","src":"11687:74:1","statements":[{"expression":{"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11705:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":947,"nodeType":"ExpressionStatement","src":"11705:12:1"},{"expression":{"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":948,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"11735:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":951,"nodeType":"ExpressionStatement","src":"11735:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11778:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":968,"nodeType":"IfStatement","src":"11774:95:1","trueBody":{"id":967,"nodeType":"Block","src":"11795:74:1","statements":[{"expression":{"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11813:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":962,"nodeType":"ExpressionStatement","src":"11813:12:1"},{"expression":{"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":963,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"11843:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":966,"nodeType":"ExpressionStatement","src":"11843:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11886:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":983,"nodeType":"IfStatement","src":"11882:95:1","trueBody":{"id":982,"nodeType":"Block","src":"11903:74:1","statements":[{"expression":{"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11921:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":977,"nodeType":"ExpressionStatement","src":"11921:12:1"},{"expression":{"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":978,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"11951:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":981,"nodeType":"ExpressionStatement","src":"11951:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11994:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":994,"nodeType":"IfStatement","src":"11990:64:1","trueBody":{"id":993,"nodeType":"Block","src":"12010:44:1","statements":[{"expression":{"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":989,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"12028:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":992,"nodeType":"ExpressionStatement","src":"12028:11:1"}]}}]},{"expression":{"id":996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"12080:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":919,"id":997,"nodeType":"Return","src":"12073:13:1"}]},"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"11185:240:1","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":999,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:1","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"value","nameLocation":"11454:5:1","nodeType":"VariableDeclaration","scope":999,"src":"11446:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":914,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:1"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":999,"src":"11484:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:1"},"scope":1039,"src":"11430:663:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1037,"nodeType":"Block","src":"12329:173:1","statements":[{"id":1036,"nodeType":"UncheckedBlock","src":"12339:157:1","statements":[{"assignments":[1011],"declarations":[{"constant":false,"id":1011,"mutability":"mutable","name":"result","nameLocation":"12371:6:1","nodeType":"VariableDeclaration","scope":1036,"src":"12363:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1015,"initialValue":{"arguments":[{"id":1013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"12387:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1012,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[999,1038],"referencedDeclaration":999,"src":"12380:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12380:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"12414:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1017,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"12424:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1018,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"12436:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$181_$","typeString":"type(enum Math.Rounding)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":179,"src":"12436:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"src":"12424:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1022,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"12457:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":1023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"12471:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:1","trueExpression":{"hexValue":"31","id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1033,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1009,"id":1035,"nodeType":"Return","src":"12407:78:1"}]}]},"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"12099:143:1","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1038,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:1","nodeType":"FunctionDefinition","parameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"value","nameLocation":"12271:5:1","nodeType":"VariableDeclaration","scope":1038,"src":"12263:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1001,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1005,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:1","nodeType":"VariableDeclaration","scope":1038,"src":"12278:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"typeName":{"id":1004,"nodeType":"UserDefinedTypeName","pathNode":{"id":1003,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":181,"src":"12278:8:1"},"referencedDeclaration":181,"src":"12278:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:1"},"returnParameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1038,"src":"12320:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:1"},"scope":1039,"src":"12247:255:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1040,"src":"202:12302:1","usedErrors":[]}],"src":"103:12402:1"},"id":1},"contracts/ExampleExternalContract.sol":{"ast":{"absolutePath":"contracts/ExampleExternalContract.sol","exportedSymbols":{"ExampleExternalContract":[1141]},"id":1142,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1041,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1141,"linearizedBaseContracts":[1141],"name":"ExampleExternalContract","nameLocation":"66:23:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"9d9a7fe9","id":1043,"mutability":"mutable","name":"completed","nameLocation":"122:9:2","nodeType":"VariableDeclaration","scope":1141,"src":"110:21:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1042,"name":"bool","nodeType":"ElementaryTypeName","src":"110:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"a3c2c462","id":1045,"mutability":"mutable","name":"totalReceived","nameLocation":"175:13:2","nodeType":"VariableDeclaration","scope":1141,"src":"160:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1044,"name":"uint256","nodeType":"ElementaryTypeName","src":"160:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"id":1051,"name":"Completed","nameLocation":"276:9:2","nodeType":"EventDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"302:6:2","nodeType":"VariableDeclaration","scope":1051,"src":"286:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"286:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1049,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"318:6:2","nodeType":"VariableDeclaration","scope":1051,"src":"310:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"310:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"285:40:2"},"src":"270:56:2"},{"body":{"id":1071,"nodeType":"Block","src":"480:241:2","statements":[{"expression":{"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1055,"name":"completed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"508:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"520:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"508:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1058,"nodeType":"ExpressionStatement","src":"508:16:2"},{"expression":{"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1059,"name":"totalReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"589:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1060,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"606:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"606:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"589:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1063,"nodeType":"ExpressionStatement","src":"589:26:2"},{"eventCall":{"arguments":[{"expression":{"id":1065,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"695:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"695:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1067,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"707:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"707:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1064,"name":"Completed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"685:9:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"685:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1070,"nodeType":"EmitStatement","src":"680:37:2"}]},"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"329:112:2","text":" @notice 完成质押操作的函数，只能被调用一次\n @dev 接收ETH并标记操作完成"},"functionSelector":"522e1177","id":1072,"implemented":true,"kind":"function","modifiers":[],"name":"complete","nameLocation":"452:8:2","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"460:2:2"},"returnParameters":{"id":1054,"nodeType":"ParameterList","parameters":[],"src":"480:0:2"},"scope":1141,"src":"443:278:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1083,"nodeType":"Block","src":"890:38:2","statements":[{"expression":{"expression":{"id":1080,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"901:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"901:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1079,"id":1082,"nodeType":"Return","src":"894:30:2"}]},"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"724:82:2","text":" @notice 用于获取合约的ETH余额\n @return 合约的ETH余额"},"functionSelector":"f8b2cb4f","id":1084,"implemented":true,"kind":"function","modifiers":[],"name":"getBalance","nameLocation":"817:10:2","nodeType":"FunctionDefinition","parameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"contractAddress","nameLocation":"839:15:2","nodeType":"VariableDeclaration","scope":1084,"src":"831:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"831:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"827:30:2"},"returnParameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1084,"src":"881:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint256","nodeType":"ElementaryTypeName","src":"881:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"880:9:2"},"scope":1141,"src":"808:120:2","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1105,"nodeType":"Block","src":"1026:183:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1091,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1106:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_ExampleExternalContract_$1141","typeString":"contract ExampleExternalContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ExampleExternalContract_$1141","typeString":"contract ExampleExternalContract"}],"id":1090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1098:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"1098:7:2","typeDescriptions":{}}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1098:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"1098:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1094,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1123:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1123:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1098:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"e8b4a6e688b7e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4bb98","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"unicodeString","lValueRequested":false,"nodeType":"Literal","src":"1134:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_056c2ce122238843ad3b438e1639e81a9919c4583ff8fc3a5c6fc2e69ecac100","typeString":"literal_string hex\"e8b4a6e688b7e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4bb98\""},"value":"账户余额不足,无法支付"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_056c2ce122238843ad3b438e1639e81a9919c4583ff8fc3a5c6fc2e69ecac100","typeString":"literal_string hex\"e8b4a6e688b7e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4bb98\""}],"id":1088,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1090:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1090:85:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1099,"nodeType":"ExpressionStatement","src":"1090:85:2"},{"expression":{"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1100,"name":"totalReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"1179:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1101,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1196:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1196:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1179:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1104,"nodeType":"ExpressionStatement","src":"1179:26:2"}]},"documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"931:66:2","text":" @notice 允许合约直接接收ETH（安全后备）"},"id":1106,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[],"src":"1006:2:2"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"1026:0:2"},"scope":1141,"src":"999:210:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1139,"nodeType":"Block","src":"1405:280:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1117,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1479:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_ExampleExternalContract_$1141","typeString":"contract ExampleExternalContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ExampleExternalContract_$1141","typeString":"contract ExampleExternalContract"}],"id":1116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1471:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:2","typeDescriptions":{}}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1471:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"1471:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1120,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"1496:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1471:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"e5a596e58ab1e6b1a0e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4bb98","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"unicodeString","lValueRequested":false,"nodeType":"Literal","src":"1504:43:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_cace7ee3fb7e48bfef19c96fc2fc2f5a629a65da6f968b5076da009e4c1ff9fb","typeString":"literal_string hex\"e5a596e58ab1e6b1a0e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4bb98\""},"value":"奖励池余额不足,无法支付"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cace7ee3fb7e48bfef19c96fc2fc2f5a629a65da6f968b5076da009e4c1ff9fb","typeString":"literal_string hex\"e5a596e58ab1e6b1a0e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4bb98\""}],"id":1114,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1463:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1463:85:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1124,"nodeType":"ExpressionStatement","src":"1463:85:2"},{"assignments":[1126,null],"declarations":[{"constant":false,"id":1126,"mutability":"mutable","name":"sent","nameLocation":"1586:4:2","nodeType":"VariableDeclaration","scope":1139,"src":"1581:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1125,"name":"bool","nodeType":"ElementaryTypeName","src":"1581:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1133,"initialValue":{"arguments":[{"hexValue":"","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1620:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1127,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"1595:4:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1595:9:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1129,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"1612:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1595:24:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1595:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1580:43:2"},{"expression":{"arguments":[{"id":1135,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"1635:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"e5b086e5a596e58ab1e8bdace7a7bbe7bb99e794a8e688b7e5a4b1e8b4a5","id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"unicodeString","lValueRequested":false,"nodeType":"Literal","src":"1641:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_253a359ac5a9f682c85704c0beff3db39cfbf8ad9c672973b2e1dac3a4128bfd","typeString":"literal_string hex\"e5b086e5a596e58ab1e8bdace7a7bbe7bb99e794a8e688b7e5a4b1e8b4a5\""},"value":"将奖励转移给用户失败"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_253a359ac5a9f682c85704c0beff3db39cfbf8ad9c672973b2e1dac3a4128bfd","typeString":"literal_string hex\"e5b086e5a596e58ab1e8bdace7a7bbe7bb99e794a8e688b7e5a4b1e8b4a5\""}],"id":1134,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1627:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1627:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1138,"nodeType":"ExpressionStatement","src":"1627:54:2"}]},"documentation":{"id":1107,"nodeType":"StructuredDocumentation","src":"1220:117:2","text":" @notice 将奖励转移给用户\n @param user 用户地址\n @param amount 奖励金额"},"functionSelector":"8b8afcd7","id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"payReward","nameLocation":"1348:9:2","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"user","nameLocation":"1374:4:2","nodeType":"VariableDeclaration","scope":1140,"src":"1358:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1108,"name":"address","nodeType":"ElementaryTypeName","src":"1358:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"amount","nameLocation":"1388:6:2","nodeType":"VariableDeclaration","scope":1140,"src":"1380:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1380:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1357:38:2"},"returnParameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"1405:0:2"},"scope":1141,"src":"1339:346:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1142,"src":"57:1630:2","usedErrors":[]}],"src":"32:1656:2"},"id":2},"contracts/Staker.sol":{"ast":{"absolutePath":"contracts/Staker.sol","exportedSymbols":{"ExampleExternalContract":[1141],"Math":[1039],"Staker":[1467],"Strings":[174]},"id":1468,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1143,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:3"},{"absolutePath":"contracts/ExampleExternalContract.sol","file":"./ExampleExternalContract.sol","id":1144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1468,"sourceUnit":1142,"src":"57:39:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":1145,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1468,"sourceUnit":175,"src":"97:51:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1146,"nodeType":"StructuredDocumentation","src":"150:81:3","text":" @title Staker 合约\n @notice 一个允许用户质押 ETH 的合约"},"fullyImplemented":true,"id":1467,"linearizedBaseContracts":[1467],"name":"Staker","nameLocation":"241:6:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"9f75f227","id":1149,"mutability":"mutable","name":"exampleExternalContract","nameLocation":"323:23:3","nodeType":"VariableDeclaration","scope":1467,"src":"292:54:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ExampleExternalContract_$1141","typeString":"contract ExampleExternalContract"},"typeName":{"id":1148,"nodeType":"UserDefinedTypeName","pathNode":{"id":1147,"name":"ExampleExternalContract","nodeType":"IdentifierPath","referencedDeclaration":1141,"src":"292:23:3"},"referencedDeclaration":1141,"src":"292:23:3","typeDescriptions":{"typeIdentifier":"t_contract$_ExampleExternalContract_$1141","typeString":"contract ExampleExternalContract"}},"visibility":"public"},{"constant":false,"functionSelector":"27e235e3","id":1153,"mutability":"mutable","name":"balances","nameLocation":"482:8:3","nodeType":"VariableDeclaration","scope":1467,"src":"447:43:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1152,"keyType":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"455:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"447:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"466:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":true,"functionSelector":"42cde4e8","id":1156,"mutability":"constant","name":"threshold","nameLocation":"535:9:3","nodeType":"VariableDeclaration","scope":1467,"src":"511:43:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"547:7:3","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"29dcb0cf","id":1162,"mutability":"mutable","name":"deadline","nameLocation":"596:8:3","nodeType":"VariableDeclaration","scope":1467,"src":"581:56:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"581:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1158,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"607:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"607:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"33303030","id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"625:12:3","subdenomination":"seconds","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"},"src":"607:30:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ef36bbde","id":1166,"mutability":"mutable","name":"stakedAt","nameLocation":"702:8:3","nodeType":"VariableDeclaration","scope":1467,"src":"667:43:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1165,"keyType":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"675:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"667:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"686:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"id":1172,"name":"Stake","nameLocation":"793:5:3","nodeType":"EventDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"815:6:3","nodeType":"VariableDeclaration","scope":1172,"src":"799:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1167,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1170,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"831:6:3","nodeType":"VariableDeclaration","scope":1172,"src":"823:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1169,"name":"uint256","nodeType":"ElementaryTypeName","src":"823:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"798:40:3"},"src":"787:52:3"},{"anonymous":false,"id":1178,"name":"Withdraw","nameLocation":"847:8:3","nodeType":"EventDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"872:4:3","nodeType":"VariableDeclaration","scope":1178,"src":"856:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1173,"name":"address","nodeType":"ElementaryTypeName","src":"856:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1176,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"886:6:3","nodeType":"VariableDeclaration","scope":1178,"src":"878:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1175,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"855:38:3"},"src":"841:53:3"},{"anonymous":false,"id":1184,"name":"Reward","nameLocation":"902:6:3","nodeType":"EventDefinition","parameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"925:4:3","nodeType":"VariableDeclaration","scope":1184,"src":"909:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"909:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1182,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"939:6:3","nodeType":"VariableDeclaration","scope":1184,"src":"931:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"931:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"908:38:3"},"src":"896:51:3"},{"body":{"id":1213,"nodeType":"Block","src":"1117:216:3","statements":[{"assignments":[1190],"declarations":[{"constant":false,"id":1190,"mutability":"mutable","name":"timeRemaining","nameLocation":"1129:13:3","nodeType":"VariableDeclaration","scope":1213,"src":"1121:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"1121:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1193,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1191,"name":"timeLeft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"1145:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1145:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1121:34:3"},{"condition":{"id":1194,"name":"requireReached","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"1163:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1210,"nodeType":"Block","src":"1257:68:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1204,"name":"timeRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"1270:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1286:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1270:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"e688aae6ada2e697a5e69c9fe5b7b2e588b0e8bebe","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"unicodeString","lValueRequested":false,"nodeType":"Literal","src":"1289:30:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab5d20db21a1c6700c37370ac684ebfcbfcec0532b274ccba04df87138579725","typeString":"literal_string hex\"e688aae6ada2e697a5e69c9fe5b7b2e588b0e8bebe\""},"value":"截止日期已到达"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ab5d20db21a1c6700c37370ac684ebfcbfcec0532b274ccba04df87138579725","typeString":"literal_string hex\"e688aae6ada2e697a5e69c9fe5b7b2e588b0e8bebe\""}],"id":1203,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1262:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1262:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"ExpressionStatement","src":"1262:58:3"}]},"id":1211,"nodeType":"IfStatement","src":"1159:166:3","trueBody":{"id":1202,"nodeType":"Block","src":"1179:72:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1196,"name":"timeRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"1192:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1209:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1192:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"e688aae6ada2e697a5e69c9fe5b09ae69caae588b0e8bebe","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"unicodeString","lValueRequested":false,"nodeType":"Literal","src":"1212:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_96c12c751b5f479d8da669d2b8e73281279602bb77b2213b8b2b3ce1ede4f684","typeString":"literal_string hex\"e688aae6ada2e697a5e69c9fe5b09ae69caae588b0e8bebe\""},"value":"截止日期尚未到达"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_96c12c751b5f479d8da669d2b8e73281279602bb77b2213b8b2b3ce1ede4f684","typeString":"literal_string hex\"e688aae6ada2e697a5e69c9fe5b09ae69caae588b0e8bebe\""}],"id":1195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1184:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1184:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1201,"nodeType":"ExpressionStatement","src":"1184:62:3"}]}},{"id":1212,"nodeType":"PlaceholderStatement","src":"1328:1:3"}]},"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"970:99:3","text":" @notice 截止时间修饰符\n @param requireReached 检查截止日期是否已到"},"id":1214,"name":"deadlineReached","nameLocation":"1080:15:3","nodeType":"ModifierDefinition","parameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"requireReached","nameLocation":"1101:14:3","nodeType":"VariableDeclaration","scope":1214,"src":"1096:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1186,"name":"bool","nodeType":"ElementaryTypeName","src":"1096:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1095:21:3"},"src":"1071:262:3","virtual":false,"visibility":"internal"},{"body":{"id":1230,"nodeType":"Block","src":"1415:120:3","statements":[{"assignments":[1218],"declarations":[{"constant":false,"id":1218,"mutability":"mutable","name":"completed","nameLocation":"1424:9:3","nodeType":"VariableDeclaration","scope":1230,"src":"1419:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1217,"name":"bool","nodeType":"ElementaryTypeName","src":"1419:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1222,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1219,"name":"exampleExternalContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"1436:23:3","typeDescriptions":{"typeIdentifier":"t_contract$_ExampleExternalContract_$1141","typeString":"contract ExampleExternalContract"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":1043,"src":"1436:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bool_$","typeString":"function () view external returns (bool)"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1436:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1419:52:3"},{"expression":{"arguments":[{"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1483:10:3","subExpression":{"id":1224,"name":"completed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"1484:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"e8b4a8e68abce8bf87e7a88be5b7b2e5ae8ce68890","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"unicodeString","lValueRequested":false,"nodeType":"Literal","src":"1495:30:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_12c3bd6ad68ff101cbb3472be00fb53e6e7cfe51332a748d9a596bf64f87fcb1","typeString":"literal_string hex\"e8b4a8e68abce8bf87e7a88be5b7b2e5ae8ce68890\""},"value":"质押过程已完成"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12c3bd6ad68ff101cbb3472be00fb53e6e7cfe51332a748d9a596bf64f87fcb1","typeString":"literal_string hex\"e8b4a8e68abce8bf87e7a88be5b7b2e5ae8ce68890\""}],"id":1223,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1475:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1475:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"ExpressionStatement","src":"1475:51:3"},{"id":1229,"nodeType":"PlaceholderStatement","src":"1530:1:3"}]},"documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"1336:48:3","text":" @notice 外部合约状态修饰符"},"id":1231,"name":"stakeNotCompleted","nameLocation":"1395:17:3","nodeType":"ModifierDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[],"src":"1412:2:3"},"src":"1386:149:3","virtual":false,"visibility":"internal"},{"body":{"id":1243,"nodeType":"Block","src":"1724:96:3","statements":[{"expression":{"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1237,"name":"exampleExternalContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"1728:23:3","typeDescriptions":{"typeIdentifier":"t_contract$_ExampleExternalContract_$1141","typeString":"contract ExampleExternalContract"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1239,"name":"exampleExternalContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1782:30:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":1238,"name":"ExampleExternalContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"1754:23:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ExampleExternalContract_$1141_$","typeString":"type(contract ExampleExternalContract)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1754:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ExampleExternalContract_$1141","typeString":"contract ExampleExternalContract"}},"src":"1728:88:3","typeDescriptions":{"typeIdentifier":"t_contract$_ExampleExternalContract_$1141","typeString":"contract ExampleExternalContract"}},"id":1242,"nodeType":"ExpressionStatement","src":"1728:88:3"}]},"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"1538:124:3","text":" @notice 合约构造函数\n @param exampleExternalContractAddress 将持有质押资金的外部合约地址"},"id":1244,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"exampleExternalContractAddress","nameLocation":"1692:30:3","nodeType":"VariableDeclaration","scope":1244,"src":"1676:46:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"1676:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"1675:48:3"},"returnParameters":{"id":1236,"nodeType":"ParameterList","parameters":[],"src":"1724:0:3"},"scope":1467,"src":"1664:156:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1288,"nodeType":"Block","src":"1939:448:3","statements":[{"assignments":[1254],"declarations":[{"constant":false,"id":1254,"mutability":"mutable","name":"contractBalance","nameLocation":"1951:15:3","nodeType":"VariableDeclaration","scope":1288,"src":"1943:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1943:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1260,"initialValue":{"expression":{"arguments":[{"id":1257,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1977:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Staker_$1467","typeString":"contract Staker"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Staker_$1467","typeString":"contract Staker"}],"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1969:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"1969:7:3","typeDescriptions":{}}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1969:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"1969:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1943:47:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1262,"name":"contractBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"2069:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1263,"name":"threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"2088:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2069:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"e69caae8bebee588b0e99888e580bc","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"unicodeString","lValueRequested":false,"nodeType":"Literal","src":"2099:24:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_588485aeda25955cd7aeca7a1aabb15f789b0be9924f528ca3d5b2f0a54ce6b0","typeString":"literal_string hex\"e69caae8bebee588b0e99888e580bc\""},"value":"未达到阈值"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_588485aeda25955cd7aeca7a1aabb15f789b0be9924f528ca3d5b2f0a54ce6b0","typeString":"literal_string hex\"e69caae8bebee588b0e99888e580bc\""}],"id":1261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2061:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2061:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1267,"nodeType":"ExpressionStatement","src":"2061:63:3"},{"assignments":[1269,null],"declarations":[{"constant":false,"id":1269,"mutability":"mutable","name":"sent","nameLocation":"2192:4:3","nodeType":"VariableDeclaration","scope":1288,"src":"2187:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1268,"name":"bool","nodeType":"ElementaryTypeName","src":"2187:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1282,"initialValue":{"arguments":[{"arguments":[{"hexValue":"636f6d706c6574652829","id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2295:12:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_522e11770d1307a266fbbb3e404dec98413350e9a634dddf7bcd27fd871b5570","typeString":"literal_string \"complete()\""},"value":"complete()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_522e11770d1307a266fbbb3e404dec98413350e9a634dddf7bcd27fd871b5570","typeString":"literal_string \"complete()\""}],"expression":{"id":1277,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2271:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"2271:23:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2271:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1272,"name":"exampleExternalContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"2210:23:3","typeDescriptions":{"typeIdentifier":"t_contract$_ExampleExternalContract_$1141","typeString":"contract ExampleExternalContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ExampleExternalContract_$1141","typeString":"contract ExampleExternalContract"}],"id":1271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2202:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"2202:7:3","typeDescriptions":{}}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2202:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2202:37:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1275,"name":"contractBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"2251:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2202:68:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2202:107:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2186:123:3"},{"expression":{"arguments":[{"id":1284,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"2321:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"e8b083e794a8e5a496e983a8e59088e7baa6e5a4b1e8b4a5","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"unicodeString","lValueRequested":false,"nodeType":"Literal","src":"2327:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef0928eae5175e8bcebce76045a82d5ef2ee8948ef50b107b63c41b713ed4fb2","typeString":"literal_string hex\"e8b083e794a8e5a496e983a8e59088e7baa6e5a4b1e8b4a5\""},"value":"调用外部合约失败"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef0928eae5175e8bcebce76045a82d5ef2ee8948ef50b107b63c41b713ed4fb2","typeString":"literal_string hex\"e8b083e794a8e5a496e983a8e59088e7baa6e5a4b1e8b4a5\""}],"id":1283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2313:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2313:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1287,"nodeType":"ExpressionStatement","src":"2313:48:3"}]},"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"1823:48:3","text":" @notice 执行外部合约的方法"},"functionSelector":"61461954","id":1289,"implemented":true,"kind":"function","modifiers":[{"id":1248,"kind":"modifierInvocation","modifierName":{"id":1247,"name":"stakeNotCompleted","nodeType":"IdentifierPath","referencedDeclaration":1231,"src":"1899:17:3"},"nodeType":"ModifierInvocation","src":"1899:17:3"},{"arguments":[{"hexValue":"74727565","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1933:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"id":1251,"kind":"modifierInvocation","modifierName":{"id":1249,"name":"deadlineReached","nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"1917:15:3"},"nodeType":"ModifierInvocation","src":"1917:21:3"}],"name":"execute","nameLocation":"1882:7:3","nodeType":"FunctionDefinition","parameters":{"id":1246,"nodeType":"ParameterList","parameters":[],"src":"1889:2:3"},"returnParameters":{"id":1252,"nodeType":"ParameterList","parameters":[],"src":"1939:0:3"},"scope":1467,"src":"1873:514:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1341,"nodeType":"Block","src":"2519:498:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1299,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2578:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"2578:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2590:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2578:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"e8b4a8e68abce98791e9a29de5bf85e9a1bbe5a4a7e4ba8e2030","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"unicodeString","lValueRequested":false,"nodeType":"Literal","src":"2593:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_378c167cc55d4f99f6292ca760135fcd4dc52415cfd3819c7a14a3bbce5e8f14","typeString":"literal_string hex\"e8b4a8e68abce98791e9a29de5bf85e9a1bbe5a4a7e4ba8e2030\""},"value":"质押金额必须大于 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_378c167cc55d4f99f6292ca760135fcd4dc52415cfd3819c7a14a3bbce5e8f14","typeString":"literal_string hex\"e8b4a8e68abce98791e9a29de5bf85e9a1bbe5a4a7e4ba8e2030\""}],"id":1298,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2570:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2570:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1305,"nodeType":"ExpressionStatement","src":"2570:59:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1309,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2708:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Staker_$1467","typeString":"contract Staker"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Staker_$1467","typeString":"contract Staker"}],"id":1308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2700:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"2700:7:3","typeDescriptions":{}}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2700:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2700:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1312,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2725:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"2725:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2700:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"e8b4a6e688b7e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4bb98","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"unicodeString","lValueRequested":false,"nodeType":"Literal","src":"2739:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_056c2ce122238843ad3b438e1639e81a9919c4583ff8fc3a5c6fc2e69ecac100","typeString":"literal_string hex\"e8b4a6e688b7e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4bb98\""},"value":"账户余额不足,无法支付"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_056c2ce122238843ad3b438e1639e81a9919c4583ff8fc3a5c6fc2e69ecac100","typeString":"literal_string hex\"e8b4a6e688b7e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4bb98\""}],"id":1306,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2688:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2688:95:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1317,"nodeType":"ExpressionStatement","src":"2688:95:3"},{"expression":{"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1318,"name":"stakedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"2818:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1321,"indexExpression":{"expression":{"id":1319,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2827:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2827:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2818:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1322,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2841:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2841:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2818:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1325,"nodeType":"ExpressionStatement","src":"2818:38:3"},{"expression":{"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1326,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"2885:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1329,"indexExpression":{"expression":{"id":1327,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2894:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2894:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2885:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1330,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2909:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"2909:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2885:33:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1333,"nodeType":"ExpressionStatement","src":"2885:33:3"},{"eventCall":{"arguments":[{"expression":{"id":1335,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2991:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2991:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1337,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3003:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"3003:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1334,"name":"Stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"2985:5:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2985:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1340,"nodeType":"EmitStatement","src":"2980:33:3"}]},"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"2390:54:3","text":" @notice 更新用户余额的质押方法"},"functionSelector":"3a4b66f1","id":1342,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"hexValue":"66616c7365","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2494:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":1294,"kind":"modifierInvocation","modifierName":{"id":1292,"name":"deadlineReached","nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"2478:15:3"},"nodeType":"ModifierInvocation","src":"2478:22:3"},{"id":1296,"kind":"modifierInvocation","modifierName":{"id":1295,"name":"stakeNotCompleted","nodeType":"IdentifierPath","referencedDeclaration":1231,"src":"2501:17:3"},"nodeType":"ModifierInvocation","src":"2501:17:3"}],"name":"stake","nameLocation":"2455:5:3","nodeType":"FunctionDefinition","parameters":{"id":1291,"nodeType":"ParameterList","parameters":[],"src":"2460:2:3"},"returnParameters":{"id":1297,"nodeType":"ParameterList","parameters":[],"src":"2519:0:3"},"scope":1467,"src":"2446:571:3","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":1406,"nodeType":"Block","src":"3185:645:3","statements":[{"assignments":[1350],"declarations":[{"constant":false,"id":1350,"mutability":"mutable","name":"userBalance","nameLocation":"3197:11:3","nodeType":"VariableDeclaration","scope":1406,"src":"3189:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"3189:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1355,"initialValue":{"baseExpression":{"id":1351,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"3211:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1354,"indexExpression":{"expression":{"id":1352,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3220:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3220:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3211:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3189:42:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1357,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"3286:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3300:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3286:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"e682a8e6b2a1e69c89e58fafe68f90e58f96e79a84e4bd99e9a29d","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"unicodeString","lValueRequested":false,"nodeType":"Literal","src":"3303:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_2735069ad82320e1522b356efeb7cf9744f1e3264349208532d98cd0024584e3","typeString":"literal_string hex\"e682a8e6b2a1e69c89e58fafe68f90e58f96e79a84e4bd99e9a29d\""},"value":"您没有可提取的余额"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2735069ad82320e1522b356efeb7cf9744f1e3264349208532d98cd0024584e3","typeString":"literal_string hex\"e682a8e6b2a1e69c89e58fafe68f90e58f96e79a84e4bd99e9a29d\""}],"id":1356,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3278:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3278:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1362,"nodeType":"ExpressionStatement","src":"3278:62:3"},{"expression":{"arguments":[{"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3396:36:3","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1364,"name":"exampleExternalContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"3397:23:3","typeDescriptions":{"typeIdentifier":"t_contract$_ExampleExternalContract_$1141","typeString":"contract ExampleExternalContract"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":1043,"src":"3397:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bool_$","typeString":"function () view external returns (bool)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3397:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"e5a496e983a8e59088e7baa6e5b7b2e5ae8ce68890efbc8ce697a0e6b395e68f90e58f96e4bd99e9a29d","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"unicodeString","lValueRequested":false,"nodeType":"Literal","src":"3437:51:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_65b112215702dbf75e8a405843f9c74f1bedca002ca1a409c908816411a2e980","typeString":"literal_string hex\"e5a496e983a8e59088e7baa6e5b7b2e5ae8ce68890efbc8ce697a0e6b395e68f90e58f96e4bd99e9a29d\""},"value":"外部合约已完成，无法提取余额"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65b112215702dbf75e8a405843f9c74f1bedca002ca1a409c908816411a2e980","typeString":"literal_string hex\"e5a496e983a8e59088e7baa6e5b7b2e5ae8ce68890efbc8ce697a0e6b395e68f90e58f96e4bd99e9a29d\""}],"id":1363,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3384:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3384:108:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1370,"nodeType":"ExpressionStatement","src":"3384:108:3"},{"expression":{"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1371,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"3521:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1374,"indexExpression":{"expression":{"id":1372,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3530:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3530:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3521:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3544:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3521:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1377,"nodeType":"ExpressionStatement","src":"3521:24:3"},{"expression":{"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1378,"name":"stakedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"3579:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1381,"indexExpression":{"expression":{"id":1379,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3588:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3588:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3579:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3602:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3579:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1384,"nodeType":"ExpressionStatement","src":"3579:24:3"},{"assignments":[1386,null],"declarations":[{"constant":false,"id":1386,"mutability":"mutable","name":"sent","nameLocation":"3644:4:3","nodeType":"VariableDeclaration","scope":1406,"src":"3639:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1385,"name":"bool","nodeType":"ElementaryTypeName","src":"3639:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1394,"initialValue":{"arguments":[{"hexValue":"","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3692:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":1387,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3654:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3654:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"3654:15:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1390,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"3678:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3654:37:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3654:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3638:57:3"},{"expression":{"arguments":[{"id":1396,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"3707:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"e5b086e794a8e688b7e4bd99e9a29de8bf94e8bf98e7bb99e794a8e688b7e5a4b1e8b4a5","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"unicodeString","lValueRequested":false,"nodeType":"Literal","src":"3713:45:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_4105032551f81437726ccbb2c89718d3d5a5b8a8f223034b331a677665f2a7fd","typeString":"literal_string hex\"e5b086e794a8e688b7e4bd99e9a29de8bf94e8bf98e7bb99e794a8e688b7e5a4b1e8b4a5\""},"value":"将用户余额返还给用户失败"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4105032551f81437726ccbb2c89718d3d5a5b8a8f223034b331a677665f2a7fd","typeString":"literal_string hex\"e5b086e794a8e688b7e4bd99e9a29de8bf94e8bf98e7bb99e794a8e688b7e5a4b1e8b4a5\""}],"id":1395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3699:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3699:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1399,"nodeType":"ExpressionStatement","src":"3699:60:3"},{"eventCall":{"arguments":[{"expression":{"id":1401,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3802:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3802:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1403,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"3814:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1400,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"3793:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3793:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1405,"nodeType":"EmitStatement","src":"3788:38:3"}]},"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"3020:114:3","text":" @notice 允许用户从合约中提取余额的方法，仅在截止日期已到但质押未完成时"},"functionSelector":"3ccfd60b","id":1407,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"hexValue":"74727565","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3179:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"id":1347,"kind":"modifierInvocation","modifierName":{"id":1345,"name":"deadlineReached","nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"3163:15:3"},"nodeType":"ModifierInvocation","src":"3163:21:3"}],"name":"withdraw","nameLocation":"3145:8:3","nodeType":"FunctionDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[],"src":"3153:2:3"},"returnParameters":{"id":1348,"nodeType":"ParameterList","parameters":[],"src":"3185:0:3"},"scope":1467,"src":"3136:694:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1427,"nodeType":"Block","src":"3951:107:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1413,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3959:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"3959:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1415,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"3978:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3959:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1425,"nodeType":"Block","src":"4012:43:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1420,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"4024:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1421,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4035:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4035:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4024:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1412,"id":1424,"nodeType":"Return","src":"4017:33:3"}]},"id":1426,"nodeType":"IfStatement","src":"3955:100:3","trueBody":{"id":1419,"nodeType":"Block","src":"3988:18:3","statements":[{"expression":{"hexValue":"30","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4000:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1412,"id":1418,"nodeType":"Return","src":"3993:8:3"}]}}]},"documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"3833:57:3","text":" @notice 截止日期到达前剩余的秒数"},"functionSelector":"1300a6d1","id":1428,"implemented":true,"kind":"function","modifiers":[],"name":"timeLeft","nameLocation":"3901:8:3","nodeType":"FunctionDefinition","parameters":{"id":1409,"nodeType":"ParameterList","parameters":[],"src":"3909:2:3"},"returnParameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"timeleft","nameLocation":"3941:8:3","nodeType":"VariableDeclaration","scope":1428,"src":"3933:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1410,"name":"uint256","nodeType":"ElementaryTypeName","src":"3933:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3932:18:3"},"scope":1467,"src":"3892:166:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1434,"nodeType":"Block","src":"4155:15:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1431,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"4159:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4159:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1433,"nodeType":"ExpressionStatement","src":"4159:7:3"}]},"id":1435,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1429,"nodeType":"ParameterList","parameters":[],"src":"4135:2:3"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[],"src":"4155:0:3"},"scope":1467,"src":"4128:42:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1465,"nodeType":"Block","src":"4382:400:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1442,"name":"exampleExternalContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4437:23:3","typeDescriptions":{"typeIdentifier":"t_contract$_ExampleExternalContract_$1141","typeString":"contract ExampleExternalContract"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":1043,"src":"4437:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bool_$","typeString":"function () view external returns (bool)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4437:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"e6b2a1e69c89e689a7e8a18ce8b4a8e68abcefbc8ce697a0e6b395e68f90e58f96e5a596e58ab1","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"unicodeString","lValueRequested":false,"nodeType":"Literal","src":"4477:48:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f032b1fb0d6305f141b8f312e90cf1092c1a6adb87657debd7c4b12bc0eed325","typeString":"literal_string hex\"e6b2a1e69c89e689a7e8a18ce8b4a8e68abcefbc8ce697a0e6b395e68f90e58f96e5a596e58ab1\""},"value":"没有执行质押，无法提取奖励"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f032b1fb0d6305f141b8f312e90cf1092c1a6adb87657debd7c4b12bc0eed325","typeString":"literal_string hex\"e6b2a1e69c89e689a7e8a18ce8b4a8e68abcefbc8ce697a0e6b395e68f90e58f96e5a596e58ab1\""}],"id":1441,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4425:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4425:104:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1447,"nodeType":"ExpressionStatement","src":"4425:104:3"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1453,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4698:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4698:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4690:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"4690:8:3","stateMutability":"payable","typeDescriptions":{}}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4690:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1456,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"4711:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1448,"name":"exampleExternalContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4656:23:3","typeDescriptions":{"typeIdentifier":"t_contract$_ExampleExternalContract_$1141","typeString":"contract ExampleExternalContract"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"payReward","nodeType":"MemberAccess","referencedDeclaration":1140,"src":"4656:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4656:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1458,"nodeType":"ExpressionStatement","src":"4656:62:3"},{"eventCall":{"arguments":[{"expression":{"id":1460,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4759:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4759:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1462,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"4771:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1459,"name":"Reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"4752:6:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4752:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1464,"nodeType":"EmitStatement","src":"4747:31:3"}]},"documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"4173:160:3","text":" @notice 前端通过获取用户的质押时间来实时计算奖励\n  用户的奖励从前端传递到合约通过withdrawReward()方法提取"},"functionSelector":"523a3f08","id":1466,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawReward","nameLocation":"4344:14:3","nodeType":"FunctionDefinition","parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"amount","nameLocation":"4367:6:3","nodeType":"VariableDeclaration","scope":1466,"src":"4359:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1437,"name":"uint256","nodeType":"ElementaryTypeName","src":"4359:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4358:16:3"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[],"src":"4382:0:3"},"scope":1467,"src":"4335:447:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1468,"src":"232:4552:3","usedErrors":[]}],"src":"32:4753:3"},"id":3}},"contracts":{"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122017c0b0bd2fa81693de2ba4fa7d5c3d71cb5f12eed4cd195457216ba3fc5fb7ad64736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xC0 0xB0 0xBD 0x2F 0xA8 AND SWAP4 0xDE 0x2B LOG4 STATICCALL PUSH30 0x5C3D71CB5F12EED4CD195457216BA3FC5FB7AD64736F6C63430008040033 ","sourceMap":"188:2065:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;188:2065:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122017c0b0bd2fa81693de2ba4fa7d5c3d71cb5f12eed4cd195457216ba3fc5fb7ad64736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xC0 0xB0 0xBD 0x2F 0xA8 AND SWAP4 0xDE 0x2B LOG4 STATICCALL PUSH30 0x5C3D71CB5F12EED4CD195457216BA3FC5FB7AD64736F6C63430008040033 ","sourceMap":"188:2065:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cdf119670baf8d0c2824da6b5db6122c266b28ea688dd5874b10632e540f66e864736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD CALL NOT PUSH8 0xBAF8D0C2824DA6B 0x5D 0xB6 SLT 0x2C 0x26 PUSH12 0x28EA688DD5874B10632E540F PUSH7 0xE864736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"202:12302:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12302:1;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cdf119670baf8d0c2824da6b5db6122c266b28ea688dd5874b10632e540f66e864736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD CALL NOT PUSH8 0xBAF8D0C2824DA6B 0x5D 0xB6 SLT 0x2C 0x26 PUSH12 0x28EA688DD5874B10632E540F PUSH7 0xE864736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"202:12302:1:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ExampleExternalContract.sol":{"ExampleExternalContract":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Completed","type":"event"},{"inputs":[],"name":"complete","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"completed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"}],"name":"getBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"payReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalReceived","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"complete()":{"details":"接收ETH并标记操作完成"},"getBalance(address)":{"returns":{"_0":"合约的ETH余额"}},"payReward(address,uint256)":{"params":{"amount":"奖励金额","user":"用户地址"}}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610389806100206000396000f3fe60806040526004361061004e5760003560e01c8063522e1177146100c65780638b8afcd7146100d05780639d9a7fe9146100f0578063a3c2c4621461011f578063f8b2cb4f1461014357600080fd5b366100c157344710156100a85760405162461bcd60e51b815260206004820152601f60248201527fe8b4a6e688b7e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4bb980060448201526064015b60405180910390fd5b34600160008282546100ba9190610317565b9091555050005b600080fd5b6100ce61016b565b005b3480156100dc57600080fd5b506100ce6100eb3660046102ec565b6101c6565b3480156100fc57600080fd5b5060005461010a9060ff1681565b60405190151581526020015b60405180910390f35b34801561012b57600080fd5b5061013560015481565b604051908152602001610116565b34801561014f57600080fd5b5061013561015e3660046102c9565b6001600160a01b03163190565b6000805460ff191660019081178255805434929061018a908490610317565b909155505060405134815233907fde2dead40a8c097b51964aec2a068ffa7dc41c6a98ff2c2b4a6e72957c32ac769060200160405180910390a2565b804710156102215760405162461bcd60e51b815260206004820152602260248201527fe5a596e58ab1e6b1a0e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4604482015261177360f31b606482015260840161009f565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461026e576040519150601f19603f3d011682016040523d82523d6000602084013e610273565b606091505b50509050806102c45760405162461bcd60e51b815260206004820152601e60248201527fe5b086e5a596e58ab1e8bdace7a7bbe7bb99e794a8e688b7e5a4b1e8b4a50000604482015260640161009f565b505050565b6000602082840312156102da578081fd5b81356102e58161033b565b9392505050565b600080604083850312156102fe578081fd5b82356103098161033b565b946020939093013593505050565b6000821982111561033657634e487b7160e01b81526011600452602481fd5b500190565b6001600160a01b038116811461035057600080fd5b5056fea2646970667358221220488ebcd6d2f6703f0f3e867898142f1f195052b29c6b6d1bfb2ef2cf65fb5e7964736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x389 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x522E1177 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8B8AFCD7 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x9D9A7FE9 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xA3C2C462 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xC1 JUMPI CALLVALUE SELFBALANCE LT ISZERO PUSH2 0xA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0xE8B4A6E688B7E4BD99E9A29DE4B88DE8B6B32CE697A0E6B395E694AFE4BB9800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBA SWAP2 SWAP1 PUSH2 0x317 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE PUSH2 0x16B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCE PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x10A SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x135 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x135 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x18A SWAP1 DUP5 SWAP1 PUSH2 0x317 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xDE2DEAD40A8C097B51964AEC2A068FFA7DC41C6A98FF2C2B4A6E72957C32AC76 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x221 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0xE5A596E58AB1E6B1A0E4BD99E9A29DE4B88DE8B6B32CE697A0E6B395E694AFE4 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1773 PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x26E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x273 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0xE5B086E5A596E58AB1E8BDACE7A7BBE7BB99E794A8E688B7E5A4B1E8B4A50000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2E5 DUP2 PUSH2 0x33B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x309 DUP2 PUSH2 0x33B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x336 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x48 DUP15 0xBC 0xD6 0xD2 0xF6 PUSH17 0x3F0F3E867898142F1F195052B29C6B6D1B 0xFB 0x2E CALLCODE 0xCF PUSH6 0xFB5E7964736F PUSH13 0x63430008040033000000000000 ","sourceMap":"57:1630:2:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2796:4","statements":[{"nodeType":"YulBlock","src":"6:3:4","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:187:4","statements":[{"body":{"nodeType":"YulBlock","src":"130:26:4","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"139:6:4"},{"name":"value0","nodeType":"YulIdentifier","src":"147:6:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:4"},"nodeType":"YulFunctionCall","src":"132:22:4"},"nodeType":"YulExpressionStatement","src":"132:22:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:4"},"nodeType":"YulFunctionCall","src":"101:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:4"},"nodeType":"YulFunctionCall","src":"97:32:4"},"nodeType":"YulIf","src":"94:2:4"},{"nodeType":"YulVariableDeclaration","src":"165:36:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"191:9:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"178:12:4"},"nodeType":"YulFunctionCall","src":"178:23:4"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"169:5:4","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"235:5:4"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"210:24:4"},"nodeType":"YulFunctionCall","src":"210:31:4"},"nodeType":"YulExpressionStatement","src":"210:31:4"},{"nodeType":"YulAssignment","src":"250:15:4","value":{"name":"value","nodeType":"YulIdentifier","src":"260:5:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"250:6:4"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:4","type":""}],"src":"14:257:4"},{"body":{"nodeType":"YulBlock","src":"371:238:4","statements":[{"body":{"nodeType":"YulBlock","src":"417:26:4","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"426:6:4"},{"name":"value1","nodeType":"YulIdentifier","src":"434:6:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"419:6:4"},"nodeType":"YulFunctionCall","src":"419:22:4"},"nodeType":"YulExpressionStatement","src":"419:22:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"392:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"401:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"388:3:4"},"nodeType":"YulFunctionCall","src":"388:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"413:2:4","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"384:3:4"},"nodeType":"YulFunctionCall","src":"384:32:4"},"nodeType":"YulIf","src":"381:2:4"},{"nodeType":"YulVariableDeclaration","src":"452:36:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"478:9:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"465:12:4"},"nodeType":"YulFunctionCall","src":"465:23:4"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"456:5:4","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"522:5:4"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"497:24:4"},"nodeType":"YulFunctionCall","src":"497:31:4"},"nodeType":"YulExpressionStatement","src":"497:31:4"},{"nodeType":"YulAssignment","src":"537:15:4","value":{"name":"value","nodeType":"YulIdentifier","src":"547:5:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"537:6:4"}]},{"nodeType":"YulAssignment","src":"561:42:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"588:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"599:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"584:3:4"},"nodeType":"YulFunctionCall","src":"584:18:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"571:12:4"},"nodeType":"YulFunctionCall","src":"571:32:4"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"561:6:4"}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"329:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"340:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"352:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"360:6:4","type":""}],"src":"276:333:4"},{"body":{"nodeType":"YulBlock","src":"805:14:4","statements":[{"nodeType":"YulAssignment","src":"807:10:4","value":{"name":"pos","nodeType":"YulIdentifier","src":"814:3:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"807:3:4"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"789:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"797:3:4","type":""}],"src":"614:205:4"},{"body":{"nodeType":"YulBlock","src":"919:92:4","statements":[{"nodeType":"YulAssignment","src":"929:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"941:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"952:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"937:3:4"},"nodeType":"YulFunctionCall","src":"937:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"929:4:4"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"971:9:4"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"996:6:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"989:6:4"},"nodeType":"YulFunctionCall","src":"989:14:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"982:6:4"},"nodeType":"YulFunctionCall","src":"982:22:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"964:6:4"},"nodeType":"YulFunctionCall","src":"964:41:4"},"nodeType":"YulExpressionStatement","src":"964:41:4"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"888:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"899:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"910:4:4","type":""}],"src":"824:187:4"},{"body":{"nodeType":"YulBlock","src":"1190:214:4","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1207:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1218:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1200:6:4"},"nodeType":"YulFunctionCall","src":"1200:21:4"},"nodeType":"YulExpressionStatement","src":"1200:21:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1241:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1252:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1237:3:4"},"nodeType":"YulFunctionCall","src":"1237:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"1257:2:4","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1230:6:4"},"nodeType":"YulFunctionCall","src":"1230:30:4"},"nodeType":"YulExpressionStatement","src":"1230:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1280:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1291:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1276:3:4"},"nodeType":"YulFunctionCall","src":"1276:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"1296:66:4","type":"","value":"0xe8b4a6e688b7e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4bb9800"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1269:6:4"},"nodeType":"YulFunctionCall","src":"1269:94:4"},"nodeType":"YulExpressionStatement","src":"1269:94:4"},{"nodeType":"YulAssignment","src":"1372:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1384:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1395:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1380:3:4"},"nodeType":"YulFunctionCall","src":"1380:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1372:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_056c2ce122238843ad3b438e1639e81a9919c4583ff8fc3a5c6fc2e69ecac100__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1167:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1181:4:4","type":""}],"src":"1016:388:4"},{"body":{"nodeType":"YulBlock","src":"1583:214:4","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1600:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1611:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1593:6:4"},"nodeType":"YulFunctionCall","src":"1593:21:4"},"nodeType":"YulExpressionStatement","src":"1593:21:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:4"},"nodeType":"YulFunctionCall","src":"1630:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"1650:2:4","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1623:6:4"},"nodeType":"YulFunctionCall","src":"1623:30:4"},"nodeType":"YulExpressionStatement","src":"1623:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1673:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1684:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1669:3:4"},"nodeType":"YulFunctionCall","src":"1669:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"1689:66:4","type":"","value":"0xe5b086e5a596e58ab1e8bdace7a7bbe7bb99e794a8e688b7e5a4b1e8b4a50000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1662:6:4"},"nodeType":"YulFunctionCall","src":"1662:94:4"},"nodeType":"YulExpressionStatement","src":"1662:94:4"},{"nodeType":"YulAssignment","src":"1765:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1777:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1788:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1773:3:4"},"nodeType":"YulFunctionCall","src":"1773:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1765:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_253a359ac5a9f682c85704c0beff3db39cfbf8ad9c672973b2e1dac3a4128bfd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1560:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1574:4:4","type":""}],"src":"1409:388:4"},{"body":{"nodeType":"YulBlock","src":"1976:266:4","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1993:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"2004:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1986:6:4"},"nodeType":"YulFunctionCall","src":"1986:21:4"},"nodeType":"YulExpressionStatement","src":"1986:21:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2027:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"2038:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2023:3:4"},"nodeType":"YulFunctionCall","src":"2023:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"2043:2:4","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2016:6:4"},"nodeType":"YulFunctionCall","src":"2016:30:4"},"nodeType":"YulExpressionStatement","src":"2016:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2066:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"2077:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2062:3:4"},"nodeType":"YulFunctionCall","src":"2062:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"2082:66:4","type":"","value":"0xe5a596e58ab1e6b1a0e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2055:6:4"},"nodeType":"YulFunctionCall","src":"2055:94:4"},"nodeType":"YulExpressionStatement","src":"2055:94:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2169:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"2180:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2165:3:4"},"nodeType":"YulFunctionCall","src":"2165:18:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2189:3:4","type":"","value":"243"},{"kind":"number","nodeType":"YulLiteral","src":"2194:4:4","type":"","value":"6003"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2185:3:4"},"nodeType":"YulFunctionCall","src":"2185:14:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2158:6:4"},"nodeType":"YulFunctionCall","src":"2158:42:4"},"nodeType":"YulExpressionStatement","src":"2158:42:4"},{"nodeType":"YulAssignment","src":"2209:27:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2221:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"2232:3:4","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2217:3:4"},"nodeType":"YulFunctionCall","src":"2217:19:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2209:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_cace7ee3fb7e48bfef19c96fc2fc2f5a629a65da6f968b5076da009e4c1ff9fb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1953:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1967:4:4","type":""}],"src":"1802:440:4"},{"body":{"nodeType":"YulBlock","src":"2348:76:4","statements":[{"nodeType":"YulAssignment","src":"2358:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2370:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"2381:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2366:3:4"},"nodeType":"YulFunctionCall","src":"2366:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2358:4:4"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2400:9:4"},{"name":"value0","nodeType":"YulIdentifier","src":"2411:6:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2393:6:4"},"nodeType":"YulFunctionCall","src":"2393:25:4"},"nodeType":"YulExpressionStatement","src":"2393:25:4"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2317:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2328:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2339:4:4","type":""}],"src":"2247:177:4"},{"body":{"nodeType":"YulBlock","src":"2477:181:4","statements":[{"body":{"nodeType":"YulBlock","src":"2512:115:4","statements":[{"expression":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"2533:3:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2542:3:4","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2547:10:4","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2538:3:4"},"nodeType":"YulFunctionCall","src":"2538:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2526:6:4"},"nodeType":"YulFunctionCall","src":"2526:33:4"},"nodeType":"YulExpressionStatement","src":"2526:33:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2579:1:4","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2582:4:4","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2572:6:4"},"nodeType":"YulFunctionCall","src":"2572:15:4"},"nodeType":"YulExpressionStatement","src":"2572:15:4"},{"expression":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"2607:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"2612:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2600:6:4"},"nodeType":"YulFunctionCall","src":"2600:17:4"},"nodeType":"YulExpressionStatement","src":"2600:17:4"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2493:1:4"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2500:1:4"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2496:3:4"},"nodeType":"YulFunctionCall","src":"2496:6:4"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2490:2:4"},"nodeType":"YulFunctionCall","src":"2490:13:4"},"nodeType":"YulIf","src":"2487:2:4"},{"nodeType":"YulAssignment","src":"2636:16:4","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2647:1:4"},{"name":"y","nodeType":"YulIdentifier","src":"2650:1:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2643:3:4"},"nodeType":"YulFunctionCall","src":"2643:9:4"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2636:3:4"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2460:1:4","type":""},{"name":"y","nodeType":"YulTypedName","src":"2463:1:4","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2469:3:4","type":""}],"src":"2429:229:4"},{"body":{"nodeType":"YulBlock","src":"2708:86:4","statements":[{"body":{"nodeType":"YulBlock","src":"2772:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2781:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2784:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2774:6:4"},"nodeType":"YulFunctionCall","src":"2774:12:4"},"nodeType":"YulExpressionStatement","src":"2774:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2731:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2742:5:4"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2757:3:4","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2762:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2753:3:4"},"nodeType":"YulFunctionCall","src":"2753:11:4"},{"kind":"number","nodeType":"YulLiteral","src":"2766:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2749:3:4"},"nodeType":"YulFunctionCall","src":"2749:19:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2738:3:4"},"nodeType":"YulFunctionCall","src":"2738:31:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2728:2:4"},"nodeType":"YulFunctionCall","src":"2728:42:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2721:6:4"},"nodeType":"YulFunctionCall","src":"2721:50:4"},"nodeType":"YulIf","src":"2718:2:4"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2697:5:4","type":""}],"src":"2663:131:4"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_056c2ce122238843ad3b438e1639e81a9919c4583ff8fc3a5c6fc2e69ecac100__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), 0xe8b4a6e688b7e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4bb9800)\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_253a359ac5a9f682c85704c0beff3db39cfbf8ad9c672973b2e1dac3a4128bfd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), 0xe5b086e5a596e58ab1e8bdace7a7bbe7bb99e794a8e688b7e5a4b1e8b4a50000)\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cace7ee3fb7e48bfef19c96fc2fc2f5a629a65da6f968b5076da009e4c1ff9fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), 0xe5a596e58ab1e6b1a0e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4)\n        mstore(add(headStart, 96), shl(243, 6003))\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":4,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061004e5760003560e01c8063522e1177146100c65780638b8afcd7146100d05780639d9a7fe9146100f0578063a3c2c4621461011f578063f8b2cb4f1461014357600080fd5b366100c157344710156100a85760405162461bcd60e51b815260206004820152601f60248201527fe8b4a6e688b7e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4bb980060448201526064015b60405180910390fd5b34600160008282546100ba9190610317565b9091555050005b600080fd5b6100ce61016b565b005b3480156100dc57600080fd5b506100ce6100eb3660046102ec565b6101c6565b3480156100fc57600080fd5b5060005461010a9060ff1681565b60405190151581526020015b60405180910390f35b34801561012b57600080fd5b5061013560015481565b604051908152602001610116565b34801561014f57600080fd5b5061013561015e3660046102c9565b6001600160a01b03163190565b6000805460ff191660019081178255805434929061018a908490610317565b909155505060405134815233907fde2dead40a8c097b51964aec2a068ffa7dc41c6a98ff2c2b4a6e72957c32ac769060200160405180910390a2565b804710156102215760405162461bcd60e51b815260206004820152602260248201527fe5a596e58ab1e6b1a0e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4604482015261177360f31b606482015260840161009f565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461026e576040519150601f19603f3d011682016040523d82523d6000602084013e610273565b606091505b50509050806102c45760405162461bcd60e51b815260206004820152601e60248201527fe5b086e5a596e58ab1e8bdace7a7bbe7bb99e794a8e688b7e5a4b1e8b4a50000604482015260640161009f565b505050565b6000602082840312156102da578081fd5b81356102e58161033b565b9392505050565b600080604083850312156102fe578081fd5b82356103098161033b565b946020939093013593505050565b6000821982111561033657634e487b7160e01b81526011600452602481fd5b500190565b6001600160a01b038116811461035057600080fd5b5056fea2646970667358221220488ebcd6d2f6703f0f3e867898142f1f195052b29c6b6d1bfb2ef2cf65fb5e7964736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x522E1177 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8B8AFCD7 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x9D9A7FE9 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xA3C2C462 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xC1 JUMPI CALLVALUE SELFBALANCE LT ISZERO PUSH2 0xA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0xE8B4A6E688B7E4BD99E9A29DE4B88DE8B6B32CE697A0E6B395E694AFE4BB9800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBA SWAP2 SWAP1 PUSH2 0x317 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE PUSH2 0x16B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCE PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x10A SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x135 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x135 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x18A SWAP1 DUP5 SWAP1 PUSH2 0x317 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xDE2DEAD40A8C097B51964AEC2A068FFA7DC41C6A98FF2C2B4A6E72957C32AC76 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x221 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0xE5A596E58AB1E6B1A0E4BD99E9A29DE4B88DE8B6B32CE697A0E6B395E694AFE4 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1773 PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x26E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x273 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0xE5B086E5A596E58AB1E8BDACE7A7BBE7BB99E794A8E688B7E5A4B1E8B4A50000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2E5 DUP2 PUSH2 0x33B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x309 DUP2 PUSH2 0x33B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x336 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x48 DUP15 0xBC 0xD6 0xD2 0xF6 PUSH17 0x3F0F3E867898142F1F195052B29C6B6D1B 0xFB 0x2E CALLCODE 0xCF PUSH6 0xFB5E7964736F PUSH13 0x63430008040033000000000000 ","sourceMap":"57:1630:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1123:9;1098:21;:34;;1090:85;;;;-1:-1:-1;;;1090:85:2;;1218:2:4;1090:85:2;;;1200:21:4;1257:2;1237:18;;;1230:30;1296:66;1276:18;;;1269:94;1380:18;;1090:85:2;;;;;;;;;1196:9;1179:13;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;;57:1630:2;;;;;443:278;;;:::i;:::-;;1339:346;;;;;;;;;;-1:-1:-1;1339:346:2;;;;;:::i;:::-;;:::i;110:21::-;;;;;;;;;;-1:-1:-1;110:21:2;;;;;;;;;;;989:14:4;;982:22;964:41;;952:2;937:18;110:21:2;;;;;;;;160:28;;;;;;;;;;;;;;;;;;;2393:25:4;;;2381:2;2366:18;160:28:2;2348:76:4;808:120:2;;;;;;;;;;-1:-1:-1;808:120:2;;;;;:::i;:::-;-1:-1:-1;;;;;901:23:2;;;808:120;443:278;508:9;:16;;-1:-1:-1;;508:16:2;520:4;508:16;;;;;589:26;;606:9;;508;589:26;;606:9;;589:26;:::i;:::-;;;;-1:-1:-1;;685:32:2;;707:9;2393:25:4;;695:10:2;;685:32;;2381:2:4;2366:18;685:32:2;;;;;;;443:278::o;1339:346::-;1496:6;1471:21;:31;;1463:85;;;;-1:-1:-1;;;1463:85:2;;2004:2:4;1463:85:2;;;1986:21:4;2043:2;2023:18;;;2016:30;2082:66;2062:18;;;2055:94;-1:-1:-1;;;2165:18:4;;;2158:42;2217:19;;1463:85:2;1976:266:4;1463:85:2;1581:9;1595:4;-1:-1:-1;;;;;1595:9:2;1612:6;1595:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1580:43;;;1635:4;1627:54;;;;-1:-1:-1;;;1627:54:2;;1611:2:4;1627:54:2;;;1593:21:4;1650:2;1630:18;;;1623:30;1689:66;1669:18;;;1662:94;1773:18;;1627:54:2;1583:214:4;1627:54:2;1339:346;;;:::o;14:257:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;:::-;260:5;84:187;-1:-1:-1;;;84:187:4:o;276:333::-;352:6;360;413:2;401:9;392:7;388:23;384:32;381:2;;;434:6;426;419:22;381:2;478:9;465:23;497:31;522:5;497:31;:::i;:::-;547:5;599:2;584:18;;;;571:32;;-1:-1:-1;;;371:238:4:o;2429:229::-;2469:3;2500:1;2496:6;2493:1;2490:13;2487:2;;;-1:-1:-1;;;2526:33:4;;2582:4;2579:1;2572:15;2612:4;2533:3;2600:17;2487:2;-1:-1:-1;2643:9:4;;2477:181::o;2663:131::-;-1:-1:-1;;;;;2738:31:4;;2728:42;;2718:2;;2784:1;2781;2774:12;2718:2;2708:86;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"181000","executionCost":"226","totalCost":"181226"},"external":{"complete()":"43258","completed()":"1021","getBalance(address)":"1128","payReward(address,uint256)":"infinite","totalReceived()":"1039"}},"methodIdentifiers":{"complete()":"522e1177","completed()":"9d9a7fe9","getBalance(address)":"f8b2cb4f","payReward(address,uint256)":"8b8afcd7","totalReceived()":"a3c2c462"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Completed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"complete\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"completed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"payReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReceived\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"complete()\":{\"details\":\"\\u63a5\\u6536ETH\\u5e76\\u6807\\u8bb0\\u64cd\\u4f5c\\u5b8c\\u6210\"},\"getBalance(address)\":{\"returns\":{\"_0\":\"\\u5408\\u7ea6\\u7684ETH\\u4f59\\u989d\"}},\"payReward(address,uint256)\":{\"params\":{\"amount\":\"\\u5956\\u52b1\\u91d1\\u989d\",\"user\":\"\\u7528\\u6237\\u5730\\u5740\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"complete()\":{\"notice\":\"\\u5b8c\\u6210\\u8d28\\u62bc\\u64cd\\u4f5c\\u7684\\u51fd\\u6570\\uff0c\\u53ea\\u80fd\\u88ab\\u8c03\\u7528\\u4e00\\u6b21\"},\"getBalance(address)\":{\"notice\":\"\\u7528\\u4e8e\\u83b7\\u53d6\\u5408\\u7ea6\\u7684ETH\\u4f59\\u989d\"},\"payReward(address,uint256)\":{\"notice\":\"\\u5c06\\u5956\\u52b1\\u8f6c\\u79fb\\u7ed9\\u7528\\u6237\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ExampleExternalContract.sol\":\"ExampleExternalContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ExampleExternalContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract ExampleExternalContract {\\n\\t// \\u5b8c\\u6210\\u72b6\\u6001\\n\\tbool public completed;\\n\\t// \\u63a5\\u6536\\u5230\\u7684\\u603b\\u91d1\\u989d\\n\\tuint256 public totalReceived;\\n\\n\\t// \\u5b9a\\u4e49\\u4e00\\u4e2a\\u4e8b\\u4ef6\\u6765\\u8bb0\\u5f55\\u6bcf\\u6b21\\u8c03\\u7528 complete \\u65b9\\u6cd5\\u65f6\\u7684\\u8be6\\u7ec6\\u4fe1\\u606f\\n\\tevent Completed(address indexed sender, uint256 amount);\\n\\n\\t/**\\n\\t * @notice \\u5b8c\\u6210\\u8d28\\u62bc\\u64cd\\u4f5c\\u7684\\u51fd\\u6570\\uff0c\\u53ea\\u80fd\\u88ab\\u8c03\\u7528\\u4e00\\u6b21\\n\\t * @dev \\u63a5\\u6536ETH\\u5e76\\u6807\\u8bb0\\u64cd\\u4f5c\\u5b8c\\u6210\\n\\t */\\n\\tfunction complete() external payable {\\n\\t\\t// \\u66f4\\u65b0\\u5b8c\\u6210\\u72b6\\u6001\\n\\t\\tcompleted = true;\\n\\n\\t\\t// \\u8bb0\\u5f55\\u63a5\\u6536\\u5230\\u7684ETH\\u91d1\\u989d\\uff08\\u901a\\u8fc7msg.value\\u83b7\\u53d6\\uff09\\n\\t\\ttotalReceived += msg.value;\\n\\n\\t\\t// \\u89e6\\u53d1\\u4e8b\\u4ef6\\uff0c\\u8bb0\\u5f55\\u8c03\\u7528\\u8005\\u5730\\u5740\\u548c\\u63a5\\u6536\\u7684\\u91d1\\u989d\\n\\t\\temit Completed(msg.sender, msg.value);\\n\\t}\\n\\n\\t/**\\n\\t * @notice \\u7528\\u4e8e\\u83b7\\u53d6\\u5408\\u7ea6\\u7684ETH\\u4f59\\u989d\\n\\t * @return \\u5408\\u7ea6\\u7684ETH\\u4f59\\u989d\\n\\t */\\n\\tfunction getBalance(\\n\\t\\taddress contractAddress\\n\\t) external view returns (uint256) {\\n\\t\\treturn contractAddress.balance;\\n\\t}\\n\\n\\t/**\\n\\t * @notice \\u5141\\u8bb8\\u5408\\u7ea6\\u76f4\\u63a5\\u63a5\\u6536ETH\\uff08\\u5b89\\u5168\\u540e\\u5907\\uff09\\n\\t */\\n\\treceive() external payable {\\n\\t\\t    // \\u68c0\\u67e5\\u5408\\u7ea6\\u662f\\u5426\\u6709\\u8db3\\u591f\\u7684\\u4f59\\u989d\\u652f\\u4ed8\\u5956\\u52b1\\n    require(address(this).balance >= msg.value, unicode\\\"\\u8d26\\u6237\\u4f59\\u989d\\u4e0d\\u8db3,\\u65e0\\u6cd5\\u652f\\u4ed8\\\");\\n\\t\\ttotalReceived += msg.value;\\n\\t}\\n\\n    \\n    /**\\n     * @notice \\u5c06\\u5956\\u52b1\\u8f6c\\u79fb\\u7ed9\\u7528\\u6237\\n     * @param user \\u7528\\u6237\\u5730\\u5740\\n     * @param amount \\u5956\\u52b1\\u91d1\\u989d\\n     */\\n\\tfunction payReward(address payable user, uint256 amount) external {\\n\\t\\t// \\u68c0\\u67e5\\u5408\\u7ea6\\u662f\\u5426\\u6709\\u8db3\\u591f\\u7684\\u4f59\\u989d\\u652f\\u4ed8\\u5956\\u52b1\\n\\t\\trequire(address(this).balance >= amount, unicode\\\"\\u5956\\u52b1\\u6c60\\u4f59\\u989d\\u4e0d\\u8db3,\\u65e0\\u6cd5\\u652f\\u4ed8\\\");\\n\\n\\t\\t// \\u8f6c\\u79fb\\u5956\\u52b1\\u7ed9\\u7528\\u6237\\n\\t\\t(bool sent,) = user.call{value: amount}(\\\"\\\");\\n\\t\\trequire(sent, unicode\\\"\\u5c06\\u5956\\u52b1\\u8f6c\\u79fb\\u7ed9\\u7528\\u6237\\u5931\\u8d25\\\");\\n\\t}\\n}\\n\",\"keccak256\":\"0x2da7d618cd72ad3b52a9bf42e0f1cf504ac5c0499e4dc77da92d8871ae5bbb96\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1043,"contract":"contracts/ExampleExternalContract.sol:ExampleExternalContract","label":"completed","offset":0,"slot":"0","type":"t_bool"},{"astId":1045,"contract":"contracts/ExampleExternalContract.sol:ExampleExternalContract","label":"totalReceived","offset":0,"slot":"1","type":"t_uint256"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"complete()":{"notice":"完成质押操作的函数，只能被调用一次"},"getBalance(address)":{"notice":"用于获取合约的ETH余额"},"payReward(address,uint256)":{"notice":"将奖励转移给用户"}},"version":1}}},"contracts/Staker.sol":{"Staker":{"abi":[{"inputs":[{"internalType":"address payable","name":"exampleExternalContractAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Reward","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Stake","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"exampleExternalContract","outputs":[{"internalType":"contract ExampleExternalContract","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakedAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"threshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"timeLeft","outputs":[{"internalType":"uint256","name":"timeleft","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"constructor":{"params":{"exampleExternalContractAddress":"将持有质押资金的外部合约地址"}}},"title":"Staker 合约","version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:568:4","statements":[{"nodeType":"YulBlock","src":"6:3:4","statements":[]},{"body":{"nodeType":"YulBlock","src":"103:229:4","statements":[{"body":{"nodeType":"YulBlock","src":"149:26:4","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"158:6:4"},{"name":"value0","nodeType":"YulIdentifier","src":"166:6:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"151:6:4"},"nodeType":"YulFunctionCall","src":"151:22:4"},"nodeType":"YulExpressionStatement","src":"151:22:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"124:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"133:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"120:3:4"},"nodeType":"YulFunctionCall","src":"120:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"145:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"116:3:4"},"nodeType":"YulFunctionCall","src":"116:32:4"},"nodeType":"YulIf","src":"113:2:4"},{"nodeType":"YulVariableDeclaration","src":"184:29:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"203:9:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"197:5:4"},"nodeType":"YulFunctionCall","src":"197:16:4"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"188:5:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"276:26:4","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"285:6:4"},{"name":"value0","nodeType":"YulIdentifier","src":"293:6:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"278:6:4"},"nodeType":"YulFunctionCall","src":"278:22:4"},"nodeType":"YulExpressionStatement","src":"278:22:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"235:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"246:5:4"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"261:3:4","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"257:3:4"},"nodeType":"YulFunctionCall","src":"257:11:4"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"253:3:4"},"nodeType":"YulFunctionCall","src":"253:19:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"242:3:4"},"nodeType":"YulFunctionCall","src":"242:31:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"232:2:4"},"nodeType":"YulFunctionCall","src":"232:42:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"225:6:4"},"nodeType":"YulFunctionCall","src":"225:50:4"},"nodeType":"YulIf","src":"222:2:4"},{"nodeType":"YulAssignment","src":"311:15:4","value":{"name":"value","nodeType":"YulIdentifier","src":"321:5:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"311:6:4"}]}]},"name":"abi_decode_tuple_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"69:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"80:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"92:6:4","type":""}],"src":"14:318:4"},{"body":{"nodeType":"YulBlock","src":"385:181:4","statements":[{"body":{"nodeType":"YulBlock","src":"420:115:4","statements":[{"expression":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"441:3:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"450:3:4","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"455:10:4","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"446:3:4"},"nodeType":"YulFunctionCall","src":"446:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"434:6:4"},"nodeType":"YulFunctionCall","src":"434:33:4"},"nodeType":"YulExpressionStatement","src":"434:33:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"487:1:4","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"490:4:4","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"480:6:4"},"nodeType":"YulFunctionCall","src":"480:15:4"},"nodeType":"YulExpressionStatement","src":"480:15:4"},{"expression":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"515:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"520:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"508:6:4"},"nodeType":"YulFunctionCall","src":"508:17:4"},"nodeType":"YulExpressionStatement","src":"508:17:4"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"401:1:4"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"408:1:4"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"404:3:4"},"nodeType":"YulFunctionCall","src":"404:6:4"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"398:2:4"},"nodeType":"YulFunctionCall","src":"398:13:4"},"nodeType":"YulIf","src":"395:2:4"},{"nodeType":"YulAssignment","src":"544:16:4","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"555:1:4"},{"name":"y","nodeType":"YulIdentifier","src":"558:1:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:4"},"nodeType":"YulFunctionCall","src":"551:9:4"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"544:3:4"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"368:1:4","type":""},{"name":"y","nodeType":"YulTypedName","src":"371:1:4","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"377:3:4","type":""}],"src":"337:229:4"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n}","id":4,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405261001042610bb8610091565b60025534801561001f57600080fd5b50604051610ce7380380610ce783398101604081905261003e91610063565b600080546001600160a01b0319166001600160a01b03929092169190911790556100b5565b600060208284031215610074578081fd5b81516001600160a01b038116811461008a578182fd5b9392505050565b600082198211156100b057634e487b7160e01b81526011600452602481fd5b500190565b610c23806100c46000396000f3fe6080604052600436106100955760003560e01c806342cde4e81161005957806342cde4e814610131578063523a3f081461014d578063614619541461016d5780639f75f22714610182578063ef36bbde146101ba57600080fd5b80631300a6d1146100a957806327e235e3146100d157806329dcb0cf146100fe5780633a4b66f1146101145780633ccfd60b1461011c57600080fd5b366100a4576100a26101e7565b005b600080fd5b3480156100b557600080fd5b506100be610420565b6040519081526020015b60405180910390f35b3480156100dd57600080fd5b506100be6100ec366004610aa3565b60016020526000908152604090205481565b34801561010a57600080fd5b506100be60025481565b6100a26101e7565b34801561012857600080fd5b506100a2610444565b34801561013d57600080fd5b506100be670de0b6b3a764000081565b34801561015957600080fd5b506100a2610168366004610af1565b6106d7565b34801561017957600080fd5b506100a2610853565b34801561018e57600080fd5b506000546101a2906001600160a01b031681565b6040516001600160a01b0390911681526020016100c8565b3480156101c657600080fd5b506100be6101d5366004610aa3565b60036020526000908152604090205481565b6000806101f2610420565b905081156102265780156102215760405162461bcd60e51b815260040161021890610b42565b60405180910390fd5b610246565b600081116102465760405162461bcd60e51b815260040161021890610b79565b60008060009054906101000a90046001600160a01b03166001600160a01b0316639d9a7fe96040518163ffffffff1660e01b815260040160206040518083038186803b15801561029557600080fd5b505afa1580156102a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cd9190610ad1565b905080156103155760405162461bcd60e51b81526020600482015260156024820152740e8b4a8e68abce8bf87e7a88be5b7b2e5ae8ce6889605c1b6044820152606401610218565b600034116103655760405162461bcd60e51b815260206004820152601a60248201527fe8b4a8e68abce98791e9a29de5bf85e9a1bbe5a4a7e4ba8e20300000000000006044820152606401610218565b344710156103b55760405162461bcd60e51b815260206004820152601f60248201527fe8b4a6e688b7e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4bb98006044820152606401610218565b3360009081526003602090815260408083204290556001909152812080543492906103e1908490610ba8565b909155505060405134815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a9060200160405180910390a2505050565b600060025442106104315750600090565b4260025461043f9190610bc0565b905090565b60016000610450610420565b9050811561047b5780156104765760405162461bcd60e51b815260040161021890610b42565b61049b565b6000811161049b5760405162461bcd60e51b815260040161021890610b79565b33600090815260016020526040902054806104f85760405162461bcd60e51b815260206004820152601b60248201527fe682a8e6b2a1e69c89e58fafe68f90e58f96e79a84e4bd99e9a29d00000000006044820152606401610218565b60008054906101000a90046001600160a01b03166001600160a01b0316639d9a7fe96040518163ffffffff1660e01b815260040160206040518083038186803b15801561054457600080fd5b505afa158015610558573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057c9190610ad1565b156105dc5760405162461bcd60e51b815260206004820152602a60248201527fe5a496e983a8e59088e7baa6e5b7b2e5ae8ce68890efbc8ce697a0e6b395e68f60448201526990e58f96e4bd99e9a29d60b01b6064820152608401610218565b33600081815260016020908152604080832083905560039091528082208290555190919083908381818185875af1925050503d806000811461063a576040519150601f19603f3d011682016040523d82523d6000602084013e61063f565b606091505b505090508061069c5760405162461bcd60e51b8152602060048201526024808201527fe5b086e794a8e688b7e4bd99e9a29de8bf94e8bf98e7bb99e794a8e688b7e5a4604482015263b1e8b4a560e01b6064820152608401610218565b60405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a250505050565b60008054906101000a90046001600160a01b03166001600160a01b0316639d9a7fe96040518163ffffffff1660e01b815260040160206040518083038186803b15801561072357600080fd5b505afa158015610737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075b9190610ad1565b6107b75760405162461bcd60e51b815260206004820152602760248201527fe6b2a1e69c89e689a7e8a18ce8b4a8e68abcefbc8ce697a0e6b395e68f90e58f60448201526696e5a596e58ab160c81b6064820152608401610218565b600054604051638b8afcd760e01b8152336004820152602481018390526001600160a01b0390911690638b8afcd790604401600060405180830381600087803b15801561080357600080fd5b505af1158015610817573d6000803e3d6000fd5b50506040518381523392507f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9915060200160405180910390a250565b60008060009054906101000a90046001600160a01b03166001600160a01b0316639d9a7fe96040518163ffffffff1660e01b815260040160206040518083038186803b1580156108a257600080fd5b505afa1580156108b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108da9190610ad1565b905080156109225760405162461bcd60e51b81526020600482015260156024820152740e8b4a8e68abce8bf87e7a88be5b7b2e5ae8ce6889605c1b6044820152606401610218565b6001600061092e610420565b905081156109595780156109545760405162461bcd60e51b815260040161021890610b42565b610979565b600081116109795760405162461bcd60e51b815260040161021890610b79565b47670de0b6b3a76400008110156109c45760405162461bcd60e51b815260206004820152600f60248201526e39a72aba2fafb9622c3a662239602f608a1b6044820152606401610218565b6000805460408051600481526024810182526020810180516001600160e01b031663522e117760e01b17905290516001600160a01b03909216918491610a0991610b09565b60006040518083038185875af1925050503d8060008114610a46576040519150601f19603f3d011682016040523d82523d6000602084013e610a4b565b606091505b5050905080610a9c5760405162461bcd60e51b815260206004820152601860248201527fe8b083e794a8e5a496e983a8e59088e7baa6e5a4b1e8b4a500000000000000006044820152606401610218565b5050505050565b600060208284031215610ab4578081fd5b81356001600160a01b0381168114610aca578182fd5b9392505050565b600060208284031215610ae2578081fd5b81518015158114610aca578182fd5b600060208284031215610b02578081fd5b5035919050565b60008251815b81811015610b295760208186018101518583015201610b0f565b81811115610b375782828501525b509190910192915050565b60208082526018908201527fe688aae6ada2e697a5e69c9fe5b09ae69caae588b0e8bebe0000000000000000604082015260600190565b6020808252601590820152747344557356d1734bd2f34e4ff2dbd972c458745f5f60591b604082015260600190565b60008219821115610bbb57610bbb610bd7565b500190565b600082821015610bd257610bd2610bd7565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212205565c6465b00ee6b44adf9676a5d4dde305342c987f53697e27b8018c799b39464736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x10 TIMESTAMP PUSH2 0xBB8 PUSH2 0x91 JUMP JUMPDEST PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xCE7 CODESIZE SUB DUP1 PUSH2 0xCE7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3E SWAP2 PUSH2 0x63 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8A JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH2 0xC23 DUP1 PUSH2 0xC4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42CDE4E8 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x42CDE4E8 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x523A3F08 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x61461954 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x9F75F227 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xEF36BBDE EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1300A6D1 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x3A4B66F1 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xA4 JUMPI PUSH2 0xA2 PUSH2 0x1E7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA2 PUSH2 0x1E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA2 PUSH2 0x444 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA2 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA2 PUSH2 0x853 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x1A2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F2 PUSH2 0x420 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x226 JUMPI DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218 SWAP1 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x246 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x246 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9D9A7FE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0xE8B4A8E68ABCE8BF87E7A88BE5B7B2E5AE8CE6889 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x218 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x365 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0xE8B4A8E68ABCE98791E9A29DE5BF85E9A1BBE5A4A7E4BA8E2030000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x218 JUMP JUMPDEST CALLVALUE SELFBALANCE LT ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0xE8B4A6E688B7E4BD99E9A29DE4B88DE8B6B32CE697A0E6B395E694AFE4BB9800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x218 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x3E1 SWAP1 DUP5 SWAP1 PUSH2 0xBA8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD TIMESTAMP LT PUSH2 0x431 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SLOAD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x450 PUSH2 0x420 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x47B JUMPI DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218 SWAP1 PUSH2 0xB42 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218 SWAP1 PUSH2 0xB79 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x4F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0xE682A8E6B2A1E69C89E58FAFE68F90E58F96E79A84E4BD99E9A29D0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x218 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9D9A7FE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x558 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x57C SWAP2 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST ISZERO PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0xE5A496E983A8E59088E7BAA6E5B7B2E5AE8CE68890EFBC8CE697A0E6B395E68F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x90E58F96E4BD99E9A29D PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x218 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE MLOAD SWAP1 SWAP2 SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x63F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0xE5B086E794A8E688B7E4BD99E9A29DE8BF94E8BF98E7BB99E794A8E688B7E5A4 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0xB1E8B4A5 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x218 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9D9A7FE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x737 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x75B SWAP2 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0xE6B2A1E69C89E689A7E8A18CE8B4A8E68ABCEFBC8CE697A0E6B395E68F90E58F PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x96E5A596E58AB1 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x218 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8B8AFCD7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x8B8AFCD7 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x817 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP3 POP PUSH32 0x619CAAFABDD75649B302BA8419E48CCCF64F37F1983AC4727CFB38B57703FFC9 SWAP2 POP PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9D9A7FE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DA SWAP2 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x922 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0xE8B4A8E68ABCE8BF87E7A88BE5B7B2E5AE8CE6889 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x218 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x92E PUSH2 0x420 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x959 JUMPI DUP1 ISZERO PUSH2 0x954 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218 SWAP1 PUSH2 0xB42 JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x979 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218 SWAP1 PUSH2 0xB79 JUMP JUMPDEST SELFBALANCE PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0x9C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x39A72ABA2FAFB9622C3A662239602F PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x218 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x522E1177 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP5 SWAP2 PUSH2 0xA09 SWAP2 PUSH2 0xB09 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA46 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0xE8B083E794A8E5A496E983A8E59088E7BAA6E5A4B1E8B4A50000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x218 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xACA JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAE2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xACA JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB02 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB29 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xB0F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB37 JUMPI DUP3 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0xE688AAE6ADA2E697A5E69C9FE5B09AE69CAAE588B0E8BEBE0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x7344557356D1734BD2F34E4FF2DBD972C458745F5F PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xBBB JUMPI PUSH2 0xBBB PUSH2 0xBD7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xBD2 JUMPI PUSH2 0xBD2 PUSH2 0xBD7 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PUSH6 0xC6465B00EE6B DIFFICULTY 0xAD 0xF9 PUSH8 0x6A5D4DDE305342C9 DUP8 CREATE2 CALLDATASIZE SWAP8 0xE2 PUSH28 0x8018C799B39464736F6C634300080400330000000000000000000000 ","sourceMap":"232:4552:3:-:0;;;607:30;:15;625:12;607:30;:::i;:::-;581:56;;1664:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1728:23;:88;;-1:-1:-1;;;;;;1728:88:3;-1:-1:-1;;;;;1728:88:3;;;;;;;;;;232:4552;;14:318:4;92:6;145:2;133:9;124:7;120:23;116:32;113:2;;;166:6;158;151:22;113:2;197:16;;-1:-1:-1;;;;;242:31:4;;232:42;;222:2;;293:6;285;278:22;222:2;321:5;103:229;-1:-1:-1;;;103:229:4:o;337:::-;377:3;408:1;404:6;401:1;398:13;395:2;;;-1:-1:-1;;;434:33:4;;490:4;487:1;480:15;520:4;441:3;508:17;395:2;-1:-1:-1;551:9:4;;385:181::o;:::-;232:4552:3;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7049:4","statements":[{"nodeType":"YulBlock","src":"6:3:4","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:236:4","statements":[{"body":{"nodeType":"YulBlock","src":"130:26:4","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"139:6:4"},{"name":"value0","nodeType":"YulIdentifier","src":"147:6:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:4"},"nodeType":"YulFunctionCall","src":"132:22:4"},"nodeType":"YulExpressionStatement","src":"132:22:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:4"},"nodeType":"YulFunctionCall","src":"101:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:4"},"nodeType":"YulFunctionCall","src":"97:32:4"},"nodeType":"YulIf","src":"94:2:4"},{"nodeType":"YulVariableDeclaration","src":"165:36:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"191:9:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"178:12:4"},"nodeType":"YulFunctionCall","src":"178:23:4"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"169:5:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"264:26:4","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"273:6:4"},{"name":"value0","nodeType":"YulIdentifier","src":"281:6:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"266:6:4"},"nodeType":"YulFunctionCall","src":"266:22:4"},"nodeType":"YulExpressionStatement","src":"266:22:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"234:5:4"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"249:3:4","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"254:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"245:3:4"},"nodeType":"YulFunctionCall","src":"245:11:4"},{"kind":"number","nodeType":"YulLiteral","src":"258:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"241:3:4"},"nodeType":"YulFunctionCall","src":"241:19:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"230:3:4"},"nodeType":"YulFunctionCall","src":"230:31:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"220:2:4"},"nodeType":"YulFunctionCall","src":"220:42:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"213:6:4"},"nodeType":"YulFunctionCall","src":"213:50:4"},"nodeType":"YulIf","src":"210:2:4"},{"nodeType":"YulAssignment","src":"299:15:4","value":{"name":"value","nodeType":"YulIdentifier","src":"309:5:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"299:6:4"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:4","type":""}],"src":"14:306:4"},{"body":{"nodeType":"YulBlock","src":"403:219:4","statements":[{"body":{"nodeType":"YulBlock","src":"449:26:4","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"458:6:4"},{"name":"value0","nodeType":"YulIdentifier","src":"466:6:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"451:6:4"},"nodeType":"YulFunctionCall","src":"451:22:4"},"nodeType":"YulExpressionStatement","src":"451:22:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"424:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"433:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"420:3:4"},"nodeType":"YulFunctionCall","src":"420:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"445:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"416:3:4"},"nodeType":"YulFunctionCall","src":"416:32:4"},"nodeType":"YulIf","src":"413:2:4"},{"nodeType":"YulVariableDeclaration","src":"484:29:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"503:9:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"497:5:4"},"nodeType":"YulFunctionCall","src":"497:16:4"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"488:5:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"566:26:4","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"575:6:4"},{"name":"value0","nodeType":"YulIdentifier","src":"583:6:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"568:6:4"},"nodeType":"YulFunctionCall","src":"568:22:4"},"nodeType":"YulExpressionStatement","src":"568:22:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"535:5:4"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"556:5:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"549:6:4"},"nodeType":"YulFunctionCall","src":"549:13:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"542:6:4"},"nodeType":"YulFunctionCall","src":"542:21:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"532:2:4"},"nodeType":"YulFunctionCall","src":"532:32:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"525:6:4"},"nodeType":"YulFunctionCall","src":"525:40:4"},"nodeType":"YulIf","src":"522:2:4"},{"nodeType":"YulAssignment","src":"601:15:4","value":{"name":"value","nodeType":"YulIdentifier","src":"611:5:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"601:6:4"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"380:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"392:6:4","type":""}],"src":"325:297:4"},{"body":{"nodeType":"YulBlock","src":"697:120:4","statements":[{"body":{"nodeType":"YulBlock","src":"743:26:4","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"752:6:4"},{"name":"value0","nodeType":"YulIdentifier","src":"760:6:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:4"},"nodeType":"YulFunctionCall","src":"745:22:4"},"nodeType":"YulExpressionStatement","src":"745:22:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"718:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"727:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"714:3:4"},"nodeType":"YulFunctionCall","src":"714:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"739:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"710:3:4"},"nodeType":"YulFunctionCall","src":"710:32:4"},"nodeType":"YulIf","src":"707:2:4"},{"nodeType":"YulAssignment","src":"778:33:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"801:9:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"788:12:4"},"nodeType":"YulFunctionCall","src":"788:23:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"778:6:4"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"663:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"674:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"686:6:4","type":""}],"src":"627:190:4"},{"body":{"nodeType":"YulBlock","src":"959:293:4","statements":[{"nodeType":"YulVariableDeclaration","src":"969:27:4","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"989:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"983:5:4"},"nodeType":"YulFunctionCall","src":"983:13:4"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"973:6:4","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1005:12:4","value":{"name":"end","nodeType":"YulIdentifier","src":"1014:3:4"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1009:1:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"1078:77:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1103:3:4"},{"name":"i","nodeType":"YulIdentifier","src":"1108:1:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1099:3:4"},"nodeType":"YulFunctionCall","src":"1099:11:4"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1126:6:4"},{"name":"i","nodeType":"YulIdentifier","src":"1134:1:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1122:3:4"},"nodeType":"YulFunctionCall","src":"1122:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"1138:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1118:3:4"},"nodeType":"YulFunctionCall","src":"1118:25:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1112:5:4"},"nodeType":"YulFunctionCall","src":"1112:32:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1092:6:4"},"nodeType":"YulFunctionCall","src":"1092:53:4"},"nodeType":"YulExpressionStatement","src":"1092:53:4"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1037:1:4"},{"name":"length","nodeType":"YulIdentifier","src":"1040:6:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1034:2:4"},"nodeType":"YulFunctionCall","src":"1034:13:4"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1048:21:4","statements":[{"nodeType":"YulAssignment","src":"1050:17:4","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1059:1:4"},{"kind":"number","nodeType":"YulLiteral","src":"1062:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1055:3:4"},"nodeType":"YulFunctionCall","src":"1055:12:4"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1050:1:4"}]}]},"pre":{"nodeType":"YulBlock","src":"1030:3:4","statements":[]},"src":"1026:129:4"},{"body":{"nodeType":"YulBlock","src":"1181:33:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1194:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"1199:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1190:3:4"},"nodeType":"YulFunctionCall","src":"1190:16:4"},{"name":"end","nodeType":"YulIdentifier","src":"1208:3:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1183:6:4"},"nodeType":"YulFunctionCall","src":"1183:29:4"},"nodeType":"YulExpressionStatement","src":"1183:29:4"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1170:1:4"},{"name":"length","nodeType":"YulIdentifier","src":"1173:6:4"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1167:2:4"},"nodeType":"YulFunctionCall","src":"1167:13:4"},"nodeType":"YulIf","src":"1164:2:4"},{"nodeType":"YulAssignment","src":"1223:23:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1234:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"1239:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1230:3:4"},"nodeType":"YulFunctionCall","src":"1230:16:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1223:3:4"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"935:3:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"940:6:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"951:3:4","type":""}],"src":"822:430:4"},{"body":{"nodeType":"YulBlock","src":"1448:14:4","statements":[{"nodeType":"YulAssignment","src":"1450:10:4","value":{"name":"pos","nodeType":"YulIdentifier","src":"1457:3:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1450:3:4"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1432:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1440:3:4","type":""}],"src":"1257:205:4"},{"body":{"nodeType":"YulBlock","src":"1612:145:4","statements":[{"nodeType":"YulAssignment","src":"1622:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:4"},"nodeType":"YulFunctionCall","src":"1630:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1622:4:4"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1664:9:4"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1679:6:4"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1695:3:4","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1700:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1691:3:4"},"nodeType":"YulFunctionCall","src":"1691:11:4"},{"kind":"number","nodeType":"YulLiteral","src":"1704:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1687:3:4"},"nodeType":"YulFunctionCall","src":"1687:19:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1675:3:4"},"nodeType":"YulFunctionCall","src":"1675:32:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1657:6:4"},"nodeType":"YulFunctionCall","src":"1657:51:4"},"nodeType":"YulExpressionStatement","src":"1657:51:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1728:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1739:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1724:3:4"},"nodeType":"YulFunctionCall","src":"1724:18:4"},{"name":"value1","nodeType":"YulIdentifier","src":"1744:6:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1717:6:4"},"nodeType":"YulFunctionCall","src":"1717:34:4"},"nodeType":"YulExpressionStatement","src":"1717:34:4"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1573:9:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1584:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1592:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1603:4:4","type":""}],"src":"1467:290:4"},{"body":{"nodeType":"YulBlock","src":"1903:102:4","statements":[{"nodeType":"YulAssignment","src":"1913:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1925:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1936:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1921:3:4"},"nodeType":"YulFunctionCall","src":"1921:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1913:4:4"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1955:9:4"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1970:6:4"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1986:3:4","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1991:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1982:3:4"},"nodeType":"YulFunctionCall","src":"1982:11:4"},{"kind":"number","nodeType":"YulLiteral","src":"1995:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1978:3:4"},"nodeType":"YulFunctionCall","src":"1978:19:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1966:3:4"},"nodeType":"YulFunctionCall","src":"1966:32:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1948:6:4"},"nodeType":"YulFunctionCall","src":"1948:51:4"},"nodeType":"YulExpressionStatement","src":"1948:51:4"}]},"name":"abi_encode_tuple_t_contract$_ExampleExternalContract_$1141__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1872:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1883:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1894:4:4","type":""}],"src":"1762:243:4"},{"body":{"nodeType":"YulBlock","src":"2184:214:4","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2201:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"2212:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2194:6:4"},"nodeType":"YulFunctionCall","src":"2194:21:4"},"nodeType":"YulExpressionStatement","src":"2194:21:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2235:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"2246:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2231:3:4"},"nodeType":"YulFunctionCall","src":"2231:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"2251:2:4","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2224:6:4"},"nodeType":"YulFunctionCall","src":"2224:30:4"},"nodeType":"YulExpressionStatement","src":"2224:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2274:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"2285:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2270:3:4"},"nodeType":"YulFunctionCall","src":"2270:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"2290:66:4","type":"","value":"0xe8b4a6e688b7e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4bb9800"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2263:6:4"},"nodeType":"YulFunctionCall","src":"2263:94:4"},"nodeType":"YulExpressionStatement","src":"2263:94:4"},{"nodeType":"YulAssignment","src":"2366:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2378:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"2389:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2374:3:4"},"nodeType":"YulFunctionCall","src":"2374:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2366:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_056c2ce122238843ad3b438e1639e81a9919c4583ff8fc3a5c6fc2e69ecac100__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2161:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2175:4:4","type":""}],"src":"2010:388:4"},{"body":{"nodeType":"YulBlock","src":"2577:201:4","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2594:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"2605:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2587:6:4"},"nodeType":"YulFunctionCall","src":"2587:21:4"},"nodeType":"YulExpressionStatement","src":"2587:21:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2628:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"2639:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2624:3:4"},"nodeType":"YulFunctionCall","src":"2624:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"2644:2:4","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2617:6:4"},"nodeType":"YulFunctionCall","src":"2617:30:4"},"nodeType":"YulExpressionStatement","src":"2617:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2667:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"2678:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2663:3:4"},"nodeType":"YulFunctionCall","src":"2663:18:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2687:2:4","type":"","value":"92"},{"kind":"number","nodeType":"YulLiteral","src":"2691:44:4","type":"","value":"0x0e8b4a8e68abce8bf87e7a88be5b7b2e5ae8ce6889"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2683:3:4"},"nodeType":"YulFunctionCall","src":"2683:53:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2656:6:4"},"nodeType":"YulFunctionCall","src":"2656:81:4"},"nodeType":"YulExpressionStatement","src":"2656:81:4"},{"nodeType":"YulAssignment","src":"2746:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2758:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"2769:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2754:3:4"},"nodeType":"YulFunctionCall","src":"2754:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2746:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_12c3bd6ad68ff101cbb3472be00fb53e6e7cfe51332a748d9a596bf64f87fcb1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2554:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2568:4:4","type":""}],"src":"2403:375:4"},{"body":{"nodeType":"YulBlock","src":"2957:214:4","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2974:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"2985:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2967:6:4"},"nodeType":"YulFunctionCall","src":"2967:21:4"},"nodeType":"YulExpressionStatement","src":"2967:21:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3008:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"3019:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3004:3:4"},"nodeType":"YulFunctionCall","src":"3004:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"3024:2:4","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2997:6:4"},"nodeType":"YulFunctionCall","src":"2997:30:4"},"nodeType":"YulExpressionStatement","src":"2997:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3047:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"3058:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3043:3:4"},"nodeType":"YulFunctionCall","src":"3043:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"3063:66:4","type":"","value":"0xe682a8e6b2a1e69c89e58fafe68f90e58f96e79a84e4bd99e9a29d0000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3036:6:4"},"nodeType":"YulFunctionCall","src":"3036:94:4"},"nodeType":"YulExpressionStatement","src":"3036:94:4"},{"nodeType":"YulAssignment","src":"3139:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3151:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"3162:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3147:3:4"},"nodeType":"YulFunctionCall","src":"3147:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3139:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_2735069ad82320e1522b356efeb7cf9744f1e3264349208532d98cd0024584e3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2934:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2948:4:4","type":""}],"src":"2783:388:4"},{"body":{"nodeType":"YulBlock","src":"3350:214:4","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3367:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"3378:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3360:6:4"},"nodeType":"YulFunctionCall","src":"3360:21:4"},"nodeType":"YulExpressionStatement","src":"3360:21:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3401:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"3412:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3397:3:4"},"nodeType":"YulFunctionCall","src":"3397:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"3417:2:4","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3390:6:4"},"nodeType":"YulFunctionCall","src":"3390:30:4"},"nodeType":"YulExpressionStatement","src":"3390:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3440:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"3451:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3436:3:4"},"nodeType":"YulFunctionCall","src":"3436:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"3456:66:4","type":"","value":"0xe8b4a8e68abce98791e9a29de5bf85e9a1bbe5a4a7e4ba8e2030000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3429:6:4"},"nodeType":"YulFunctionCall","src":"3429:94:4"},"nodeType":"YulExpressionStatement","src":"3429:94:4"},{"nodeType":"YulAssignment","src":"3532:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3544:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"3555:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3540:3:4"},"nodeType":"YulFunctionCall","src":"3540:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3532:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_378c167cc55d4f99f6292ca760135fcd4dc52415cfd3819c7a14a3bbce5e8f14__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3327:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3341:4:4","type":""}],"src":"3176:388:4"},{"body":{"nodeType":"YulBlock","src":"3743:272:4","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3760:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"3771:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3753:6:4"},"nodeType":"YulFunctionCall","src":"3753:21:4"},"nodeType":"YulExpressionStatement","src":"3753:21:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3794:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"3805:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3790:3:4"},"nodeType":"YulFunctionCall","src":"3790:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"3810:2:4","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3783:6:4"},"nodeType":"YulFunctionCall","src":"3783:30:4"},"nodeType":"YulExpressionStatement","src":"3783:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3833:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"3844:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3829:3:4"},"nodeType":"YulFunctionCall","src":"3829:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"3849:66:4","type":"","value":"0xe5b086e794a8e688b7e4bd99e9a29de8bf94e8bf98e7bb99e794a8e688b7e5a4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3822:6:4"},"nodeType":"YulFunctionCall","src":"3822:94:4"},"nodeType":"YulExpressionStatement","src":"3822:94:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3936:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"3947:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3932:3:4"},"nodeType":"YulFunctionCall","src":"3932:18:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3956:3:4","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3961:10:4","type":"","value":"0xb1e8b4a5"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3952:3:4"},"nodeType":"YulFunctionCall","src":"3952:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3925:6:4"},"nodeType":"YulFunctionCall","src":"3925:48:4"},"nodeType":"YulExpressionStatement","src":"3925:48:4"},{"nodeType":"YulAssignment","src":"3982:27:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3994:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"4005:3:4","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3990:3:4"},"nodeType":"YulFunctionCall","src":"3990:19:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3982:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_4105032551f81437726ccbb2c89718d3d5a5b8a8f223034b331a677665f2a7fd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3720:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3734:4:4","type":""}],"src":"3569:446:4"},{"body":{"nodeType":"YulBlock","src":"4194:190:4","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4211:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"4222:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4204:6:4"},"nodeType":"YulFunctionCall","src":"4204:21:4"},"nodeType":"YulExpressionStatement","src":"4204:21:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4245:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"4256:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4241:3:4"},"nodeType":"YulFunctionCall","src":"4241:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"4261:2:4","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4234:6:4"},"nodeType":"YulFunctionCall","src":"4234:30:4"},"nodeType":"YulExpressionStatement","src":"4234:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4284:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"4295:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4280:3:4"},"nodeType":"YulFunctionCall","src":"4280:18:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4304:3:4","type":"","value":"138"},{"kind":"number","nodeType":"YulLiteral","src":"4309:32:4","type":"","value":"0x39a72aba2fafb9622c3a662239602f"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4300:3:4"},"nodeType":"YulFunctionCall","src":"4300:42:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4273:6:4"},"nodeType":"YulFunctionCall","src":"4273:70:4"},"nodeType":"YulExpressionStatement","src":"4273:70:4"},{"nodeType":"YulAssignment","src":"4352:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4364:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"4375:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4360:3:4"},"nodeType":"YulFunctionCall","src":"4360:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4352:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_588485aeda25955cd7aeca7a1aabb15f789b0be9924f528ca3d5b2f0a54ce6b0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4171:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4185:4:4","type":""}],"src":"4020:364:4"},{"body":{"nodeType":"YulBlock","src":"4563:284:4","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4580:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"4591:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4573:6:4"},"nodeType":"YulFunctionCall","src":"4573:21:4"},"nodeType":"YulExpressionStatement","src":"4573:21:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4614:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"4625:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4610:3:4"},"nodeType":"YulFunctionCall","src":"4610:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"4630:2:4","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4603:6:4"},"nodeType":"YulFunctionCall","src":"4603:30:4"},"nodeType":"YulExpressionStatement","src":"4603:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4653:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"4664:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4649:3:4"},"nodeType":"YulFunctionCall","src":"4649:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"4669:66:4","type":"","value":"0xe5a496e983a8e59088e7baa6e5b7b2e5ae8ce68890efbc8ce697a0e6b395e68f"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4642:6:4"},"nodeType":"YulFunctionCall","src":"4642:94:4"},"nodeType":"YulExpressionStatement","src":"4642:94:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4756:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"4767:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4752:3:4"},"nodeType":"YulFunctionCall","src":"4752:18:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4776:3:4","type":"","value":"176"},{"kind":"number","nodeType":"YulLiteral","src":"4781:22:4","type":"","value":"0x90e58f96e4bd99e9a29d"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4772:3:4"},"nodeType":"YulFunctionCall","src":"4772:32:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4745:6:4"},"nodeType":"YulFunctionCall","src":"4745:60:4"},"nodeType":"YulExpressionStatement","src":"4745:60:4"},{"nodeType":"YulAssignment","src":"4814:27:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"4837:3:4","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:4"},"nodeType":"YulFunctionCall","src":"4822:19:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4814:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_65b112215702dbf75e8a405843f9c74f1bedca002ca1a409c908816411a2e980__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4540:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4554:4:4","type":""}],"src":"4389:458:4"},{"body":{"nodeType":"YulBlock","src":"5026:214:4","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5043:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5054:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5036:6:4"},"nodeType":"YulFunctionCall","src":"5036:21:4"},"nodeType":"YulExpressionStatement","src":"5036:21:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5077:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5088:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5073:3:4"},"nodeType":"YulFunctionCall","src":"5073:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"5093:2:4","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5066:6:4"},"nodeType":"YulFunctionCall","src":"5066:30:4"},"nodeType":"YulExpressionStatement","src":"5066:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5116:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5127:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5112:3:4"},"nodeType":"YulFunctionCall","src":"5112:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"5132:66:4","type":"","value":"0xe688aae6ada2e697a5e69c9fe5b09ae69caae588b0e8bebe0000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5105:6:4"},"nodeType":"YulFunctionCall","src":"5105:94:4"},"nodeType":"YulExpressionStatement","src":"5105:94:4"},{"nodeType":"YulAssignment","src":"5208:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5220:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5231:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5216:3:4"},"nodeType":"YulFunctionCall","src":"5216:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5208:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_96c12c751b5f479d8da669d2b8e73281279602bb77b2213b8b2b3ce1ede4f684__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5003:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5017:4:4","type":""}],"src":"4852:388:4"},{"body":{"nodeType":"YulBlock","src":"5419:201:4","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5436:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5447:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5429:6:4"},"nodeType":"YulFunctionCall","src":"5429:21:4"},"nodeType":"YulExpressionStatement","src":"5429:21:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5470:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5481:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5466:3:4"},"nodeType":"YulFunctionCall","src":"5466:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"5486:2:4","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5459:6:4"},"nodeType":"YulFunctionCall","src":"5459:30:4"},"nodeType":"YulExpressionStatement","src":"5459:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5509:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5520:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5505:3:4"},"nodeType":"YulFunctionCall","src":"5505:18:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5529:2:4","type":"","value":"89"},{"kind":"number","nodeType":"YulLiteral","src":"5533:44:4","type":"","value":"0x7344557356d1734bd2f34e4ff2dbd972c458745f5f"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5525:3:4"},"nodeType":"YulFunctionCall","src":"5525:53:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5498:6:4"},"nodeType":"YulFunctionCall","src":"5498:81:4"},"nodeType":"YulExpressionStatement","src":"5498:81:4"},{"nodeType":"YulAssignment","src":"5588:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5600:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5611:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5596:3:4"},"nodeType":"YulFunctionCall","src":"5596:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5588:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_ab5d20db21a1c6700c37370ac684ebfcbfcec0532b274ccba04df87138579725__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5396:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5410:4:4","type":""}],"src":"5245:375:4"},{"body":{"nodeType":"YulBlock","src":"5799:214:4","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5816:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5827:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5809:6:4"},"nodeType":"YulFunctionCall","src":"5809:21:4"},"nodeType":"YulExpressionStatement","src":"5809:21:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5850:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5861:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5846:3:4"},"nodeType":"YulFunctionCall","src":"5846:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"5866:2:4","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5839:6:4"},"nodeType":"YulFunctionCall","src":"5839:30:4"},"nodeType":"YulExpressionStatement","src":"5839:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5889:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5900:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5885:3:4"},"nodeType":"YulFunctionCall","src":"5885:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"5905:66:4","type":"","value":"0xe8b083e794a8e5a496e983a8e59088e7baa6e5a4b1e8b4a50000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5878:6:4"},"nodeType":"YulFunctionCall","src":"5878:94:4"},"nodeType":"YulExpressionStatement","src":"5878:94:4"},{"nodeType":"YulAssignment","src":"5981:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5993:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"6004:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5989:3:4"},"nodeType":"YulFunctionCall","src":"5989:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5981:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_ef0928eae5175e8bcebce76045a82d5ef2ee8948ef50b107b63c41b713ed4fb2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5776:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5790:4:4","type":""}],"src":"5625:388:4"},{"body":{"nodeType":"YulBlock","src":"6192:278:4","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6209:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"6220:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6202:6:4"},"nodeType":"YulFunctionCall","src":"6202:21:4"},"nodeType":"YulExpressionStatement","src":"6202:21:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6243:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"6254:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6239:3:4"},"nodeType":"YulFunctionCall","src":"6239:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"6259:2:4","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6232:6:4"},"nodeType":"YulFunctionCall","src":"6232:30:4"},"nodeType":"YulExpressionStatement","src":"6232:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6282:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"6293:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6278:3:4"},"nodeType":"YulFunctionCall","src":"6278:18:4"},{"kind":"number","nodeType":"YulLiteral","src":"6298:66:4","type":"","value":"0xe6b2a1e69c89e689a7e8a18ce8b4a8e68abcefbc8ce697a0e6b395e68f90e58f"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6271:6:4"},"nodeType":"YulFunctionCall","src":"6271:94:4"},"nodeType":"YulExpressionStatement","src":"6271:94:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6385:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"6396:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6381:3:4"},"nodeType":"YulFunctionCall","src":"6381:18:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6405:3:4","type":"","value":"200"},{"kind":"number","nodeType":"YulLiteral","src":"6410:16:4","type":"","value":"0x96e5a596e58ab1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6401:3:4"},"nodeType":"YulFunctionCall","src":"6401:26:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6374:6:4"},"nodeType":"YulFunctionCall","src":"6374:54:4"},"nodeType":"YulExpressionStatement","src":"6374:54:4"},{"nodeType":"YulAssignment","src":"6437:27:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6449:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"6460:3:4","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6445:3:4"},"nodeType":"YulFunctionCall","src":"6445:19:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6437:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_f032b1fb0d6305f141b8f312e90cf1092c1a6adb87657debd7c4b12bc0eed325__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6169:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6183:4:4","type":""}],"src":"6018:452:4"},{"body":{"nodeType":"YulBlock","src":"6576:76:4","statements":[{"nodeType":"YulAssignment","src":"6586:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6598:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"6609:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6594:3:4"},"nodeType":"YulFunctionCall","src":"6594:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6586:4:4"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6628:9:4"},{"name":"value0","nodeType":"YulIdentifier","src":"6639:6:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6621:6:4"},"nodeType":"YulFunctionCall","src":"6621:25:4"},"nodeType":"YulExpressionStatement","src":"6621:25:4"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6545:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6556:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6567:4:4","type":""}],"src":"6475:177:4"},{"body":{"nodeType":"YulBlock","src":"6705:80:4","statements":[{"body":{"nodeType":"YulBlock","src":"6732:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6734:16:4"},"nodeType":"YulFunctionCall","src":"6734:18:4"},"nodeType":"YulExpressionStatement","src":"6734:18:4"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6721:1:4"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6728:1:4"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6724:3:4"},"nodeType":"YulFunctionCall","src":"6724:6:4"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6718:2:4"},"nodeType":"YulFunctionCall","src":"6718:13:4"},"nodeType":"YulIf","src":"6715:2:4"},{"nodeType":"YulAssignment","src":"6763:16:4","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6774:1:4"},{"name":"y","nodeType":"YulIdentifier","src":"6777:1:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6770:3:4"},"nodeType":"YulFunctionCall","src":"6770:9:4"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6763:3:4"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6688:1:4","type":""},{"name":"y","nodeType":"YulTypedName","src":"6691:1:4","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6697:3:4","type":""}],"src":"6657:128:4"},{"body":{"nodeType":"YulBlock","src":"6839:76:4","statements":[{"body":{"nodeType":"YulBlock","src":"6861:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6863:16:4"},"nodeType":"YulFunctionCall","src":"6863:18:4"},"nodeType":"YulExpressionStatement","src":"6863:18:4"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6855:1:4"},{"name":"y","nodeType":"YulIdentifier","src":"6858:1:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6852:2:4"},"nodeType":"YulFunctionCall","src":"6852:8:4"},"nodeType":"YulIf","src":"6849:2:4"},{"nodeType":"YulAssignment","src":"6892:17:4","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6904:1:4"},{"name":"y","nodeType":"YulIdentifier","src":"6907:1:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6900:3:4"},"nodeType":"YulFunctionCall","src":"6900:9:4"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6892:4:4"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6821:1:4","type":""},{"name":"y","nodeType":"YulTypedName","src":"6824:1:4","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"6830:4:4","type":""}],"src":"6790:125:4"},{"body":{"nodeType":"YulBlock","src":"6952:95:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6969:1:4","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6976:3:4","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6981:10:4","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6972:3:4"},"nodeType":"YulFunctionCall","src":"6972:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6962:6:4"},"nodeType":"YulFunctionCall","src":"6962:31:4"},"nodeType":"YulExpressionStatement","src":"6962:31:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7009:1:4","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7012:4:4","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7002:6:4"},"nodeType":"YulFunctionCall","src":"7002:15:4"},"nodeType":"YulExpressionStatement","src":"7002:15:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7033:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7036:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7026:6:4"},"nodeType":"YulFunctionCall","src":"7026:15:4"},"nodeType":"YulExpressionStatement","src":"7026:15:4"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6920:127:4"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), end) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_ExampleExternalContract_$1141__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_056c2ce122238843ad3b438e1639e81a9919c4583ff8fc3a5c6fc2e69ecac100__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), 0xe8b4a6e688b7e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4bb9800)\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_12c3bd6ad68ff101cbb3472be00fb53e6e7cfe51332a748d9a596bf64f87fcb1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), shl(92, 0x0e8b4a8e68abce8bf87e7a88be5b7b2e5ae8ce6889))\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2735069ad82320e1522b356efeb7cf9744f1e3264349208532d98cd0024584e3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), 0xe682a8e6b2a1e69c89e58fafe68f90e58f96e79a84e4bd99e9a29d0000000000)\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_378c167cc55d4f99f6292ca760135fcd4dc52415cfd3819c7a14a3bbce5e8f14__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), 0xe8b4a8e68abce98791e9a29de5bf85e9a1bbe5a4a7e4ba8e2030000000000000)\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4105032551f81437726ccbb2c89718d3d5a5b8a8f223034b331a677665f2a7fd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), 0xe5b086e794a8e688b7e4bd99e9a29de8bf94e8bf98e7bb99e794a8e688b7e5a4)\n        mstore(add(headStart, 96), shl(224, 0xb1e8b4a5))\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_588485aeda25955cd7aeca7a1aabb15f789b0be9924f528ca3d5b2f0a54ce6b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), shl(138, 0x39a72aba2fafb9622c3a662239602f))\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_65b112215702dbf75e8a405843f9c74f1bedca002ca1a409c908816411a2e980__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), 0xe5a496e983a8e59088e7baa6e5b7b2e5ae8ce68890efbc8ce697a0e6b395e68f)\n        mstore(add(headStart, 96), shl(176, 0x90e58f96e4bd99e9a29d))\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_96c12c751b5f479d8da669d2b8e73281279602bb77b2213b8b2b3ce1ede4f684__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), 0xe688aae6ada2e697a5e69c9fe5b09ae69caae588b0e8bebe0000000000000000)\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ab5d20db21a1c6700c37370ac684ebfcbfcec0532b274ccba04df87138579725__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), shl(89, 0x7344557356d1734bd2f34e4ff2dbd972c458745f5f))\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ef0928eae5175e8bcebce76045a82d5ef2ee8948ef50b107b63c41b713ed4fb2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), 0xe8b083e794a8e5a496e983a8e59088e7baa6e5a4b1e8b4a50000000000000000)\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f032b1fb0d6305f141b8f312e90cf1092c1a6adb87657debd7c4b12bc0eed325__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), 0xe6b2a1e69c89e689a7e8a18ce8b4a8e68abcefbc8ce697a0e6b395e68f90e58f)\n        mstore(add(headStart, 96), shl(200, 0x96e5a596e58ab1))\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}","id":4,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100955760003560e01c806342cde4e81161005957806342cde4e814610131578063523a3f081461014d578063614619541461016d5780639f75f22714610182578063ef36bbde146101ba57600080fd5b80631300a6d1146100a957806327e235e3146100d157806329dcb0cf146100fe5780633a4b66f1146101145780633ccfd60b1461011c57600080fd5b366100a4576100a26101e7565b005b600080fd5b3480156100b557600080fd5b506100be610420565b6040519081526020015b60405180910390f35b3480156100dd57600080fd5b506100be6100ec366004610aa3565b60016020526000908152604090205481565b34801561010a57600080fd5b506100be60025481565b6100a26101e7565b34801561012857600080fd5b506100a2610444565b34801561013d57600080fd5b506100be670de0b6b3a764000081565b34801561015957600080fd5b506100a2610168366004610af1565b6106d7565b34801561017957600080fd5b506100a2610853565b34801561018e57600080fd5b506000546101a2906001600160a01b031681565b6040516001600160a01b0390911681526020016100c8565b3480156101c657600080fd5b506100be6101d5366004610aa3565b60036020526000908152604090205481565b6000806101f2610420565b905081156102265780156102215760405162461bcd60e51b815260040161021890610b42565b60405180910390fd5b610246565b600081116102465760405162461bcd60e51b815260040161021890610b79565b60008060009054906101000a90046001600160a01b03166001600160a01b0316639d9a7fe96040518163ffffffff1660e01b815260040160206040518083038186803b15801561029557600080fd5b505afa1580156102a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cd9190610ad1565b905080156103155760405162461bcd60e51b81526020600482015260156024820152740e8b4a8e68abce8bf87e7a88be5b7b2e5ae8ce6889605c1b6044820152606401610218565b600034116103655760405162461bcd60e51b815260206004820152601a60248201527fe8b4a8e68abce98791e9a29de5bf85e9a1bbe5a4a7e4ba8e20300000000000006044820152606401610218565b344710156103b55760405162461bcd60e51b815260206004820152601f60248201527fe8b4a6e688b7e4bd99e9a29de4b88de8b6b32ce697a0e6b395e694afe4bb98006044820152606401610218565b3360009081526003602090815260408083204290556001909152812080543492906103e1908490610ba8565b909155505060405134815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a9060200160405180910390a2505050565b600060025442106104315750600090565b4260025461043f9190610bc0565b905090565b60016000610450610420565b9050811561047b5780156104765760405162461bcd60e51b815260040161021890610b42565b61049b565b6000811161049b5760405162461bcd60e51b815260040161021890610b79565b33600090815260016020526040902054806104f85760405162461bcd60e51b815260206004820152601b60248201527fe682a8e6b2a1e69c89e58fafe68f90e58f96e79a84e4bd99e9a29d00000000006044820152606401610218565b60008054906101000a90046001600160a01b03166001600160a01b0316639d9a7fe96040518163ffffffff1660e01b815260040160206040518083038186803b15801561054457600080fd5b505afa158015610558573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057c9190610ad1565b156105dc5760405162461bcd60e51b815260206004820152602a60248201527fe5a496e983a8e59088e7baa6e5b7b2e5ae8ce68890efbc8ce697a0e6b395e68f60448201526990e58f96e4bd99e9a29d60b01b6064820152608401610218565b33600081815260016020908152604080832083905560039091528082208290555190919083908381818185875af1925050503d806000811461063a576040519150601f19603f3d011682016040523d82523d6000602084013e61063f565b606091505b505090508061069c5760405162461bcd60e51b8152602060048201526024808201527fe5b086e794a8e688b7e4bd99e9a29de8bf94e8bf98e7bb99e794a8e688b7e5a4604482015263b1e8b4a560e01b6064820152608401610218565b60405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a250505050565b60008054906101000a90046001600160a01b03166001600160a01b0316639d9a7fe96040518163ffffffff1660e01b815260040160206040518083038186803b15801561072357600080fd5b505afa158015610737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075b9190610ad1565b6107b75760405162461bcd60e51b815260206004820152602760248201527fe6b2a1e69c89e689a7e8a18ce8b4a8e68abcefbc8ce697a0e6b395e68f90e58f60448201526696e5a596e58ab160c81b6064820152608401610218565b600054604051638b8afcd760e01b8152336004820152602481018390526001600160a01b0390911690638b8afcd790604401600060405180830381600087803b15801561080357600080fd5b505af1158015610817573d6000803e3d6000fd5b50506040518381523392507f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9915060200160405180910390a250565b60008060009054906101000a90046001600160a01b03166001600160a01b0316639d9a7fe96040518163ffffffff1660e01b815260040160206040518083038186803b1580156108a257600080fd5b505afa1580156108b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108da9190610ad1565b905080156109225760405162461bcd60e51b81526020600482015260156024820152740e8b4a8e68abce8bf87e7a88be5b7b2e5ae8ce6889605c1b6044820152606401610218565b6001600061092e610420565b905081156109595780156109545760405162461bcd60e51b815260040161021890610b42565b610979565b600081116109795760405162461bcd60e51b815260040161021890610b79565b47670de0b6b3a76400008110156109c45760405162461bcd60e51b815260206004820152600f60248201526e39a72aba2fafb9622c3a662239602f608a1b6044820152606401610218565b6000805460408051600481526024810182526020810180516001600160e01b031663522e117760e01b17905290516001600160a01b03909216918491610a0991610b09565b60006040518083038185875af1925050503d8060008114610a46576040519150601f19603f3d011682016040523d82523d6000602084013e610a4b565b606091505b5050905080610a9c5760405162461bcd60e51b815260206004820152601860248201527fe8b083e794a8e5a496e983a8e59088e7baa6e5a4b1e8b4a500000000000000006044820152606401610218565b5050505050565b600060208284031215610ab4578081fd5b81356001600160a01b0381168114610aca578182fd5b9392505050565b600060208284031215610ae2578081fd5b81518015158114610aca578182fd5b600060208284031215610b02578081fd5b5035919050565b60008251815b81811015610b295760208186018101518583015201610b0f565b81811115610b375782828501525b509190910192915050565b60208082526018908201527fe688aae6ada2e697a5e69c9fe5b09ae69caae588b0e8bebe0000000000000000604082015260600190565b6020808252601590820152747344557356d1734bd2f34e4ff2dbd972c458745f5f60591b604082015260600190565b60008219821115610bbb57610bbb610bd7565b500190565b600082821015610bd257610bd2610bd7565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212205565c6465b00ee6b44adf9676a5d4dde305342c987f53697e27b8018c799b39464736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42CDE4E8 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x42CDE4E8 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x523A3F08 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x61461954 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x9F75F227 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xEF36BBDE EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1300A6D1 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x3A4B66F1 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xA4 JUMPI PUSH2 0xA2 PUSH2 0x1E7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA2 PUSH2 0x1E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA2 PUSH2 0x444 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA2 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA2 PUSH2 0x853 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x1A2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F2 PUSH2 0x420 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x226 JUMPI DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218 SWAP1 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x246 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x246 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9D9A7FE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0xE8B4A8E68ABCE8BF87E7A88BE5B7B2E5AE8CE6889 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x218 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x365 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0xE8B4A8E68ABCE98791E9A29DE5BF85E9A1BBE5A4A7E4BA8E2030000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x218 JUMP JUMPDEST CALLVALUE SELFBALANCE LT ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0xE8B4A6E688B7E4BD99E9A29DE4B88DE8B6B32CE697A0E6B395E694AFE4BB9800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x218 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x3E1 SWAP1 DUP5 SWAP1 PUSH2 0xBA8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD TIMESTAMP LT PUSH2 0x431 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SLOAD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x450 PUSH2 0x420 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x47B JUMPI DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218 SWAP1 PUSH2 0xB42 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218 SWAP1 PUSH2 0xB79 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x4F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0xE682A8E6B2A1E69C89E58FAFE68F90E58F96E79A84E4BD99E9A29D0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x218 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9D9A7FE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x558 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x57C SWAP2 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST ISZERO PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0xE5A496E983A8E59088E7BAA6E5B7B2E5AE8CE68890EFBC8CE697A0E6B395E68F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x90E58F96E4BD99E9A29D PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x218 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE MLOAD SWAP1 SWAP2 SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x63F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0xE5B086E794A8E688B7E4BD99E9A29DE8BF94E8BF98E7BB99E794A8E688B7E5A4 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0xB1E8B4A5 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x218 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9D9A7FE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x737 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x75B SWAP2 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0xE6B2A1E69C89E689A7E8A18CE8B4A8E68ABCEFBC8CE697A0E6B395E68F90E58F PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x96E5A596E58AB1 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x218 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8B8AFCD7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x8B8AFCD7 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x817 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP3 POP PUSH32 0x619CAAFABDD75649B302BA8419E48CCCF64F37F1983AC4727CFB38B57703FFC9 SWAP2 POP PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9D9A7FE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DA SWAP2 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x922 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0xE8B4A8E68ABCE8BF87E7A88BE5B7B2E5AE8CE6889 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x218 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x92E PUSH2 0x420 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x959 JUMPI DUP1 ISZERO PUSH2 0x954 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218 SWAP1 PUSH2 0xB42 JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x979 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218 SWAP1 PUSH2 0xB79 JUMP JUMPDEST SELFBALANCE PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0x9C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x39A72ABA2FAFB9622C3A662239602F PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x218 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x522E1177 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP5 SWAP2 PUSH2 0xA09 SWAP2 PUSH2 0xB09 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA46 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0xE8B083E794A8E5A496E983A8E59088E7BAA6E5A4B1E8B4A50000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x218 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xACA JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAE2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xACA JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB02 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB29 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xB0F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB37 JUMPI DUP3 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0xE688AAE6ADA2E697A5E69C9FE5B09AE69CAAE588B0E8BEBE0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x7344557356D1734BD2F34E4FF2DBD972C458745F5F PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xBBB JUMPI PUSH2 0xBBB PUSH2 0xBD7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xBD2 JUMPI PUSH2 0xBD2 PUSH2 0xBD7 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PUSH6 0xC6465B00EE6B DIFFICULTY 0xAD 0xF9 PUSH8 0x6A5D4DDE305342C9 DUP8 CREATE2 CALLDATASIZE SWAP8 0xE2 PUSH28 0x8018C799B39464736F6C634300080400330000000000000000000000 ","sourceMap":"232:4552:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4159:7;:5;:7::i;:::-;232:4552;;;;;3892:166;;;;;;;;;;;;;:::i;:::-;;;6621:25:4;;;6609:2;6594:18;3892:166:3;;;;;;;;447:43;;;;;;;;;;-1:-1:-1;447:43:3;;;;;:::i;:::-;;;;;;;;;;;;;;581:56;;;;;;;;;;;;;;;;2446:571;;;:::i;3136:694::-;;;;;;;;;;;;;:::i;511:43::-;;;;;;;;;;;;547:7;511:43;;4335:447;;;;;;;;;;-1:-1:-1;4335:447:3;;;;;:::i;:::-;;:::i;1873:514::-;;;;;;;;;;;;;:::i;292:54::-;;;;;;;;;;-1:-1:-1;292:54:3;;;;-1:-1:-1;;;;;292:54:3;;;;;;-1:-1:-1;;;;;1966:32:4;;;1948:51;;1936:2;1921:18;292:54:3;1903:102:4;667:43:3;;;;;;;;;;-1:-1:-1;667:43:3;;;;;:::i;:::-;;;;;;;;;;;;;;2446:571;2494:5;1121:21;1145:10;:8;:10::i;:::-;1121:34;;1163:14;1159:166;;;1192:18;;1184:62;;;;-1:-1:-1;;;1184:62:3;;;;;;;:::i;:::-;;;;;;;;;1159:166;;;1286:1;1270:13;:17;1262:58;;;;-1:-1:-1;;;1262:58:3;;;;;;;:::i;:::-;1419:14:::1;1436:23:::0;::::1;;;;;;;;-1:-1:-1::0;;;;;1436:23:3::1;-1:-1:-1::0;;;;;1436:33:3::1;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1419:52;;1484:9;1483:10;1475:51;;;::::0;-1:-1:-1;;;1475:51:3;;2605:2:4;1475:51:3::1;::::0;::::1;2587:21:4::0;2644:2;2624:18;;;2617:30;-1:-1:-1;;;2663:18:4;;;2656:81;2754:18;;1475:51:3::1;2577:201:4::0;1475:51:3::1;2590:1:::2;2578:9;:13;2570:59;;;::::0;-1:-1:-1;;;2570:59:3;;3378:2:4;2570:59:3::2;::::0;::::2;3360:21:4::0;3417:2;3397:18;;;3390:30;3456:66;3436:18;;;3429:94;3540:18;;2570:59:3::2;3350:214:4::0;2570:59:3::2;2725:9;2700:21;:34;;2688:95;;;::::0;-1:-1:-1;;;2688:95:3;;2212:2:4;2688:95:3::2;::::0;::::2;2194:21:4::0;2251:2;2231:18;;;2224:30;2290:66;2270:18;;;2263:94;2374:18;;2688:95:3::2;2184:214:4::0;2688:95:3::2;2827:10;2818:20;::::0;;;:8:::2;:20;::::0;;;;;;;2841:15:::2;2818:38:::0;;2885:8:::2;:20:::0;;;;;:33;;2909:9:::2;::::0;2818:20;2885:33:::2;::::0;2909:9;;2885:33:::2;:::i;:::-;::::0;;;-1:-1:-1;;2985:28:3::2;::::0;3003:9:::2;6621:25:4::0;;2991:10:3::2;::::0;2985:28:::2;::::0;6609:2:4;6594:18;2985:28:3::2;;;;;;;1328:1:::1;2446:571:::0;;:::o;3892:166::-;3933:16;3978:8;;3959:15;:27;3955:100;;-1:-1:-1;4000:1:3;;3892:166::o;3955:100::-;4035:15;4024:8;;:26;;;;:::i;:::-;4017:33;;3892:166;:::o;3136:694::-;3179:4;1121:21;1145:10;:8;:10::i;:::-;1121:34;;1163:14;1159:166;;;1192:18;;1184:62;;;;-1:-1:-1;;;1184:62:3;;;;;;;:::i;:::-;1159:166;;;1286:1;1270:13;:17;1262:58;;;;-1:-1:-1;;;1262:58:3;;;;;;;:::i;:::-;3220:10:::1;3189:19;3211:20:::0;;;:8:::1;:20;::::0;;;;;3286:15;3278:62:::1;;;::::0;-1:-1:-1;;;3278:62:3;;2985:2:4;3278:62:3::1;::::0;::::1;2967:21:4::0;3024:2;3004:18;;;2997:30;3063:66;3043:18;;;3036:94;3147:18;;3278:62:3::1;2957:214:4::0;3278:62:3::1;3397:23;::::0;::::1;;;;;;-1:-1:-1::0;;;;;3397:23:3::1;-1:-1:-1::0;;;;;3397:33:3::1;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3396:36;3384:108;;;::::0;-1:-1:-1;;;3384:108:3;;4591:2:4;3384:108:3::1;::::0;::::1;4573:21:4::0;4630:2;4610:18;;;4603:30;4669:66;4649:18;;;4642:94;-1:-1:-1;;;4752:18:4;;;4745:60;4822:19;;3384:108:3::1;4563:284:4::0;3384:108:3::1;3530:10;3544:1;3521:20:::0;;;:8:::1;:20;::::0;;;;;;;:24;;;3579:8:::1;:20:::0;;;;;;:24;;;3654:41;3544:1;;3530:10;3678:11;;3544:1;3654:41;3544:1;3654:41;3678:11;3530:10;3654:41:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3638:57;;;3707:4;3699:60;;;::::0;-1:-1:-1;;;3699:60:3;;3771:2:4;3699:60:3::1;::::0;::::1;3753:21:4::0;3810:2;3790:18;;;3783:30;3849:66;3829:18;;;3822:94;-1:-1:-1;;;3932:18:4;;;3925:48;3990:19;;3699:60:3::1;3743:272:4::0;3699:60:3::1;3793:33;::::0;6621:25:4;;;3802:10:3::1;::::0;3793:33:::1;::::0;6609:2:4;6594:18;3793:33:3::1;;;;;;;1328:1;;3136:694:::0;;:::o;4335:447::-;4437:23;;;;;;;;-1:-1:-1;;;;;4437:23:3;-1:-1:-1;;;;;4437:33:3;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4425:104;;;;-1:-1:-1;;;4425:104:3;;6220:2:4;4425:104:3;;;6202:21:4;6259:2;6239:18;;;6232:30;6298:66;6278:18;;;6271:94;-1:-1:-1;;;6381:18:4;;;6374:54;6445:19;;4425:104:3;6192:278:4;4425:104:3;4656:23;;:62;;-1:-1:-1;;;4656:62:3;;4698:10;4656:62;;;1657:51:4;1724:18;;;1717:34;;;-1:-1:-1;;;;;4656:23:3;;;;:33;;1630:18:4;;4656:62:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4752:26:3;;6621:25:4;;;4759:10:3;;-1:-1:-1;4752:26:3;;-1:-1:-1;6609:2:4;6594:18;4752:26:3;;;;;;;4335:447;:::o;1873:514::-;1419:14;1436:23;;;;;;;;;-1:-1:-1;;;;;1436:23:3;-1:-1:-1;;;;;1436:33:3;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1419:52;;1484:9;1483:10;1475:51;;;;-1:-1:-1;;;1475:51:3;;2605:2:4;1475:51:3;;;2587:21:4;2644:2;2624:18;;;2617:30;-1:-1:-1;;;2663:18:4;;;2656:81;2754:18;;1475:51:3;2577:201:4;1475:51:3;1933:4:::1;1121:21;1145:10;:8;:10::i;:::-;1121:34;;1163:14;1159:166;;;1192:18:::0;;1184:62:::1;;;;-1:-1:-1::0;;;1184:62:3::1;;;;;;;:::i;:::-;1159:166;;;1286:1;1270:13;:17;1262:58;;;;-1:-1:-1::0;;;1262:58:3::1;;;;;;;:::i;:::-;1969:21:::2;547:7;2069:28:::0;::::2;;2061:63;;;::::0;-1:-1:-1;;;2061:63:3;;4222:2:4;2061:63:3::2;::::0;::::2;4204:21:4::0;4261:2;4241:18;;;4234:30;-1:-1:-1;;;4280:18:4;;;4273:70;4360:18;;2061:63:3::2;4194:190:4::0;2061:63:3::2;2187:9;2210:23:::0;;2271:37:::2;::::0;;;;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;2271:37:3::2;-1:-1:-1::0;;;2271:37:3::2;::::0;;2202:107;;-1:-1:-1;;;;;2210:23:3;;::::2;::::0;2251:15;;2202:107:::2;::::0;::::2;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2186:123;;;2321:4;2313:48;;;::::0;-1:-1:-1;;;2313:48:3;;5827:2:4;2313:48:3::2;::::0;::::2;5809:21:4::0;5866:2;5846:18;;;5839:30;5905:66;5885:18;;;5878:94;5989:18;;2313:48:3::2;5799:214:4::0;2313:48:3::2;1328:1;;1530::::1;;1873:514:::0;:::o;14:306:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:4;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:4:o;325:297::-;392:6;445:2;433:9;424:7;420:23;416:32;413:2;;;466:6;458;451:22;413:2;503:9;497:16;556:5;549:13;542:21;535:5;532:32;522:2;;583:6;575;568:22;627:190;686:6;739:2;727:9;718:7;714:23;710:32;707:2;;;760:6;752;745:22;707:2;-1:-1:-1;788:23:4;;697:120;-1:-1:-1;697:120:4:o;822:430::-;951:3;989:6;983:13;1014:3;1026:129;1040:6;1037:1;1034:13;1026:129;;;1138:4;1122:14;;;1118:25;;1112:32;1099:11;;;1092:53;1055:12;1026:129;;;1173:6;1170:1;1167:13;1164:2;;;1208:3;1199:6;1194:3;1190:16;1183:29;1164:2;-1:-1:-1;1230:16:4;;;;;959:293;-1:-1:-1;;959:293:4:o;4852:388::-;5054:2;5036:21;;;5093:2;5073:18;;;5066:30;5132:66;5127:2;5112:18;;5105:94;5231:2;5216:18;;5026:214::o;5245:375::-;5447:2;5429:21;;;5486:2;5466:18;;;5459:30;-1:-1:-1;;;5520:2:4;5505:18;;5498:81;5611:2;5596:18;;5419:201::o;6657:128::-;6697:3;6728:1;6724:6;6721:1;6718:13;6715:2;;;6734:18;;:::i;:::-;-1:-1:-1;6770:9:4;;6705:80::o;6790:125::-;6830:4;6858:1;6855;6852:8;6849:2;;;6863:18;;:::i;:::-;-1:-1:-1;6900:9:4;;6839:76::o;6920:127::-;6981:10;6976:3;6972:20;6969:1;6962:31;7012:4;7009:1;7002:15;7036:4;7033:1;7026:15"},"gasEstimates":{"creation":{"codeDepositCost":"621400","executionCost":"infinite","totalCost":"infinite"},"external":{"balances(address)":"1196","deadline()":"1029","exampleExternalContract()":"1103","execute()":"infinite","stake()":"infinite","stakedAt(address)":"1261","threshold()":"184","timeLeft()":"1896","withdraw()":"infinite","withdrawReward(uint256)":"infinite"}},"methodIdentifiers":{"balances(address)":"27e235e3","deadline()":"29dcb0cf","exampleExternalContract()":"9f75f227","execute()":"61461954","stake()":"3a4b66f1","stakedAt(address)":"ef36bbde","threshold()":"42cde4e8","timeLeft()":"1300a6d1","withdraw()":"3ccfd60b","withdrawReward(uint256)":"523a3f08"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"exampleExternalContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Reward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exampleExternalContract\",\"outputs\":[{\"internalType\":\"contract ExampleExternalContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"threshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timeleft\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"exampleExternalContractAddress\":\"\\u5c06\\u6301\\u6709\\u8d28\\u62bc\\u8d44\\u91d1\\u7684\\u5916\\u90e8\\u5408\\u7ea6\\u5730\\u5740\"}}},\"title\":\"Staker \\u5408\\u7ea6\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"\\u5408\\u7ea6\\u6784\\u9020\\u51fd\\u6570\"},\"execute()\":{\"notice\":\"\\u6267\\u884c\\u5916\\u90e8\\u5408\\u7ea6\\u7684\\u65b9\\u6cd5\"},\"stake()\":{\"notice\":\"\\u66f4\\u65b0\\u7528\\u6237\\u4f59\\u989d\\u7684\\u8d28\\u62bc\\u65b9\\u6cd5\"},\"timeLeft()\":{\"notice\":\"\\u622a\\u6b62\\u65e5\\u671f\\u5230\\u8fbe\\u524d\\u5269\\u4f59\\u7684\\u79d2\\u6570\"},\"withdraw()\":{\"notice\":\"\\u5141\\u8bb8\\u7528\\u6237\\u4ece\\u5408\\u7ea6\\u4e2d\\u63d0\\u53d6\\u4f59\\u989d\\u7684\\u65b9\\u6cd5\\uff0c\\u4ec5\\u5728\\u622a\\u6b62\\u65e5\\u671f\\u5df2\\u5230\\u4f46\\u8d28\\u62bc\\u672a\\u5b8c\\u6210\\u65f6\"},\"withdrawReward(uint256)\":{\"notice\":\"\\u524d\\u7aef\\u901a\\u8fc7\\u83b7\\u53d6\\u7528\\u6237\\u7684\\u8d28\\u62bc\\u65f6\\u95f4\\u6765\\u5b9e\\u65f6\\u8ba1\\u7b97\\u5956\\u52b1  \\u7528\\u6237\\u7684\\u5956\\u52b1\\u4ece\\u524d\\u7aef\\u4f20\\u9012\\u5230\\u5408\\u7ea6\\u901a\\u8fc7withdrawReward()\\u65b9\\u6cd5\\u63d0\\u53d6\"}},\"notice\":\"\\u4e00\\u4e2a\\u5141\\u8bb8\\u7528\\u6237\\u8d28\\u62bc ETH \\u7684\\u5408\\u7ea6\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staker.sol\":\"Staker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/ExampleExternalContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract ExampleExternalContract {\\n\\t// \\u5b8c\\u6210\\u72b6\\u6001\\n\\tbool public completed;\\n\\t// \\u63a5\\u6536\\u5230\\u7684\\u603b\\u91d1\\u989d\\n\\tuint256 public totalReceived;\\n\\n\\t// \\u5b9a\\u4e49\\u4e00\\u4e2a\\u4e8b\\u4ef6\\u6765\\u8bb0\\u5f55\\u6bcf\\u6b21\\u8c03\\u7528 complete \\u65b9\\u6cd5\\u65f6\\u7684\\u8be6\\u7ec6\\u4fe1\\u606f\\n\\tevent Completed(address indexed sender, uint256 amount);\\n\\n\\t/**\\n\\t * @notice \\u5b8c\\u6210\\u8d28\\u62bc\\u64cd\\u4f5c\\u7684\\u51fd\\u6570\\uff0c\\u53ea\\u80fd\\u88ab\\u8c03\\u7528\\u4e00\\u6b21\\n\\t * @dev \\u63a5\\u6536ETH\\u5e76\\u6807\\u8bb0\\u64cd\\u4f5c\\u5b8c\\u6210\\n\\t */\\n\\tfunction complete() external payable {\\n\\t\\t// \\u66f4\\u65b0\\u5b8c\\u6210\\u72b6\\u6001\\n\\t\\tcompleted = true;\\n\\n\\t\\t// \\u8bb0\\u5f55\\u63a5\\u6536\\u5230\\u7684ETH\\u91d1\\u989d\\uff08\\u901a\\u8fc7msg.value\\u83b7\\u53d6\\uff09\\n\\t\\ttotalReceived += msg.value;\\n\\n\\t\\t// \\u89e6\\u53d1\\u4e8b\\u4ef6\\uff0c\\u8bb0\\u5f55\\u8c03\\u7528\\u8005\\u5730\\u5740\\u548c\\u63a5\\u6536\\u7684\\u91d1\\u989d\\n\\t\\temit Completed(msg.sender, msg.value);\\n\\t}\\n\\n\\t/**\\n\\t * @notice \\u7528\\u4e8e\\u83b7\\u53d6\\u5408\\u7ea6\\u7684ETH\\u4f59\\u989d\\n\\t * @return \\u5408\\u7ea6\\u7684ETH\\u4f59\\u989d\\n\\t */\\n\\tfunction getBalance(\\n\\t\\taddress contractAddress\\n\\t) external view returns (uint256) {\\n\\t\\treturn contractAddress.balance;\\n\\t}\\n\\n\\t/**\\n\\t * @notice \\u5141\\u8bb8\\u5408\\u7ea6\\u76f4\\u63a5\\u63a5\\u6536ETH\\uff08\\u5b89\\u5168\\u540e\\u5907\\uff09\\n\\t */\\n\\treceive() external payable {\\n\\t\\t    // \\u68c0\\u67e5\\u5408\\u7ea6\\u662f\\u5426\\u6709\\u8db3\\u591f\\u7684\\u4f59\\u989d\\u652f\\u4ed8\\u5956\\u52b1\\n    require(address(this).balance >= msg.value, unicode\\\"\\u8d26\\u6237\\u4f59\\u989d\\u4e0d\\u8db3,\\u65e0\\u6cd5\\u652f\\u4ed8\\\");\\n\\t\\ttotalReceived += msg.value;\\n\\t}\\n\\n    \\n    /**\\n     * @notice \\u5c06\\u5956\\u52b1\\u8f6c\\u79fb\\u7ed9\\u7528\\u6237\\n     * @param user \\u7528\\u6237\\u5730\\u5740\\n     * @param amount \\u5956\\u52b1\\u91d1\\u989d\\n     */\\n\\tfunction payReward(address payable user, uint256 amount) external {\\n\\t\\t// \\u68c0\\u67e5\\u5408\\u7ea6\\u662f\\u5426\\u6709\\u8db3\\u591f\\u7684\\u4f59\\u989d\\u652f\\u4ed8\\u5956\\u52b1\\n\\t\\trequire(address(this).balance >= amount, unicode\\\"\\u5956\\u52b1\\u6c60\\u4f59\\u989d\\u4e0d\\u8db3,\\u65e0\\u6cd5\\u652f\\u4ed8\\\");\\n\\n\\t\\t// \\u8f6c\\u79fb\\u5956\\u52b1\\u7ed9\\u7528\\u6237\\n\\t\\t(bool sent,) = user.call{value: amount}(\\\"\\\");\\n\\t\\trequire(sent, unicode\\\"\\u5c06\\u5956\\u52b1\\u8f6c\\u79fb\\u7ed9\\u7528\\u6237\\u5931\\u8d25\\\");\\n\\t}\\n}\\n\",\"keccak256\":\"0x2da7d618cd72ad3b52a9bf42e0f1cf504ac5c0499e4dc77da92d8871ae5bbb96\",\"license\":\"MIT\"},\"contracts/Staker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"./ExampleExternalContract.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\n/**\\n * @title Staker \\u5408\\u7ea6\\n * @notice \\u4e00\\u4e2a\\u5141\\u8bb8\\u7528\\u6237\\u8d28\\u62bc ETH \\u7684\\u5408\\u7ea6\\n */\\ncontract Staker {\\n\\t// \\u5c06\\u6301\\u6709\\u8d28\\u62bc\\u8d44\\u91d1\\u7684\\u5916\\u90e8\\u5408\\u7ea6\\n\\tExampleExternalContract public exampleExternalContract;\\n\\n\\t// NFT \\u51ed\\u8bc1\\u5408\\u7ea6\\n\\t// StakingCertificate public certificate;\\n\\n\\t// \\u7528\\u6237\\u8d28\\u62bc\\u8d44\\u91d1\\u7684\\u4f59\\u989d\\n\\tmapping(address => uint256) public balances;\\n\\n\\t// \\u8d28\\u62bc\\u9608\\u503c\\n\\tuint256 public constant threshold = 1 ether;\\n\\n\\t// \\u8d28\\u62bc\\u622a\\u6b62\\u65e5\\u671f\\n\\tuint256 public deadline = block.timestamp + 3000 seconds;\\n\\n\\t// \\u7528\\u6237\\u8d28\\u62bc\\u7684\\u65f6\\u95f4\\n\\tmapping(address => uint256) public stakedAt;\\n\\n\\t// uint256 public depositTimestamp = block.timestamp;\\n\\n\\t// \\u5408\\u7ea6\\u4e8b\\u4ef6\\n\\tevent Stake(address indexed sender, uint256 amount);\\n\\tevent Withdraw(address indexed user, uint256 amount);\\n\\tevent Reward(address indexed user, uint256 amount);\\n\\n\\t// \\u5408\\u7ea6\\u4fee\\u9970\\u7b26\\n\\t/**\\n\\t * @notice \\u622a\\u6b62\\u65f6\\u95f4\\u4fee\\u9970\\u7b26\\n\\t * @param requireReached \\u68c0\\u67e5\\u622a\\u6b62\\u65e5\\u671f\\u662f\\u5426\\u5df2\\u5230\\n\\t */\\n\\tmodifier deadlineReached(bool requireReached) {\\n\\t\\tuint256 timeRemaining = timeLeft();\\n\\t\\tif (requireReached) {\\n\\t\\t\\trequire(timeRemaining == 0, unicode\\\"\\u622a\\u6b62\\u65e5\\u671f\\u5c1a\\u672a\\u5230\\u8fbe\\\");\\n\\t\\t} else {\\n\\t\\t\\trequire(timeRemaining > 0, unicode\\\"\\u622a\\u6b62\\u65e5\\u671f\\u5df2\\u5230\\u8fbe\\\");\\n\\t\\t}\\n\\t\\t_;\\n\\t}\\n\\n\\t/**\\n\\t * @notice \\u5916\\u90e8\\u5408\\u7ea6\\u72b6\\u6001\\u4fee\\u9970\\u7b26\\n\\t */\\n\\tmodifier stakeNotCompleted() {\\n\\t\\tbool completed = exampleExternalContract.completed();\\n\\t\\trequire(!completed, unicode\\\"\\u8d28\\u62bc\\u8fc7\\u7a0b\\u5df2\\u5b8c\\u6210\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/**\\n\\t * @notice \\u5408\\u7ea6\\u6784\\u9020\\u51fd\\u6570\\n\\t * @param exampleExternalContractAddress \\u5c06\\u6301\\u6709\\u8d28\\u62bc\\u8d44\\u91d1\\u7684\\u5916\\u90e8\\u5408\\u7ea6\\u5730\\u5740\\n\\t */\\n\\tconstructor(address payable exampleExternalContractAddress) {\\n\\t\\texampleExternalContract = ExampleExternalContract(\\n\\t\\t\\texampleExternalContractAddress\\n\\t\\t);\\n\\t}\\n\\n\\t/**\\n\\t * @notice \\u6267\\u884c\\u5916\\u90e8\\u5408\\u7ea6\\u7684\\u65b9\\u6cd5\\n\\t */\\n\\tfunction execute() public stakeNotCompleted deadlineReached(true) {\\n\\t\\tuint256 contractBalance = address(this).balance;\\n\\n\\t\\t// \\u68c0\\u67e5\\u5408\\u7ea6\\u5f53\\u524dETH\\u662f\\u5426\\u5927\\u4e8e\\u6216\\u8005\\u7b49\\u4e8e\\u8bbe\\u5b9a\\u7684\\u9608\\u503c\\n\\t\\trequire(contractBalance >= threshold, unicode\\\"\\u672a\\u8fbe\\u5230\\u9608\\u503c\\\");\\n\\n\\t\\t// \\u6267\\u884c\\u5916\\u90e8\\u5408\\u7ea6\\uff0c\\u5c06\\u6240\\u6709\\u4f59\\u989d\\u8f6c\\u79fb\\u5230\\u5408\\u7ea6\\n\\t\\t(bool sent, ) = address(exampleExternalContract).call{\\n\\t\\t\\tvalue: contractBalance\\n\\t\\t}(abi.encodeWithSignature(\\\"complete()\\\"));\\n\\t\\trequire(sent, unicode\\\"\\u8c03\\u7528\\u5916\\u90e8\\u5408\\u7ea6\\u5931\\u8d25\\\");  //\\u5b89\\u5168\\u5ba1\\u8ba1\\u4fee\\u590d\\n\\t}\\n\\n\\t/**\\n\\t * @notice \\u66f4\\u65b0\\u7528\\u6237\\u4f59\\u989d\\u7684\\u8d28\\u62bc\\u65b9\\u6cd5\\n\\t */\\n\\tfunction stake() public payable deadlineReached(false) stakeNotCompleted {\\n\\t\\t// \\u68c0\\u67e5\\u7528\\u6237\\u7684\\u8d28\\u62bc\\u91d1\\u989d\\u662f\\u5426\\u5927\\u4e8e 0\\n\\t\\trequire(msg.value > 0, unicode\\\"\\u8d28\\u62bc\\u91d1\\u989d\\u5fc5\\u987b\\u5927\\u4e8e 0\\\");\\n\\n\\t\\t// \\u68c0\\u67e5\\u5408\\u7ea6\\u662f\\u5426\\u6709\\u8db3\\u591f\\u7684\\u4f59\\u989d\\u652f\\u4ed8\\u5956\\u52b1\\n\\t\\trequire(\\n\\t\\t\\taddress(this).balance >= msg.value,\\n\\t\\t\\tunicode\\\"\\u8d26\\u6237\\u4f59\\u989d\\u4e0d\\u8db3,\\u65e0\\u6cd5\\u652f\\u4ed8\\\"\\n\\t\\t);\\n\\n\\t\\t// \\u66f4\\u65b0\\u7528\\u6237\\u8d28\\u62bc\\u65f6\\u95f4\\n\\t\\tstakedAt[msg.sender] = block.timestamp;\\n\\n\\t\\t// \\u66f4\\u65b0\\u7528\\u6237\\u4f59\\u989d\\n\\t\\tbalances[msg.sender] += msg.value;\\n\\n\\t\\t// \\u89e6\\u53d1\\u4e8b\\u4ef6\\uff0c\\u5e7f\\u64ad\\u5df2\\u6b63\\u786e\\u8d28\\u62bc\\u4e86\\u4e00\\u4e9b\\u8d44\\u91d1\\n\\t\\temit Stake(msg.sender, msg.value);\\n\\t}\\n\\n\\t/**\\n\\t * @notice \\u5141\\u8bb8\\u7528\\u6237\\u4ece\\u5408\\u7ea6\\u4e2d\\u63d0\\u53d6\\u4f59\\u989d\\u7684\\u65b9\\u6cd5\\uff0c\\u4ec5\\u5728\\u622a\\u6b62\\u65e5\\u671f\\u5df2\\u5230\\u4f46\\u8d28\\u62bc\\u672a\\u5b8c\\u6210\\u65f6\\n\\t */\\n\\tfunction withdraw() public deadlineReached(true) {\\n\\t\\tuint256 userBalance = balances[msg.sender];\\n\\n\\t\\t// \\u68c0\\u67e5\\u7528\\u6237\\u662f\\u5426\\u6709\\u4f59\\u989d\\u53ef\\u63d0\\u53d6\\n\\t\\trequire(userBalance > 0, unicode\\\"\\u60a8\\u6ca1\\u6709\\u53ef\\u63d0\\u53d6\\u7684\\u4f59\\u989d\\\");\\n\\n\\t\\t// \\u68c0\\u67e5\\u5916\\u90e8\\u5408\\u7ea6\\u662f\\u5426\\u5df2\\u5b8c\\u6210\\n\\t\\trequire(\\n\\t\\t\\t!exampleExternalContract.completed(),\\n\\t\\t\\tunicode\\\"\\u5916\\u90e8\\u5408\\u7ea6\\u5df2\\u5b8c\\u6210\\uff0c\\u65e0\\u6cd5\\u63d0\\u53d6\\u4f59\\u989d\\\"\\n\\t\\t);\\n\\n\\t\\t// \\u91cd\\u7f6e\\u7528\\u6237\\u4f59\\u989d\\n\\t\\tbalances[msg.sender] = 0;\\n\\t\\t// \\u91cd\\u7f6e\\u7528\\u6237\\u8d28\\u62bc\\u65f6\\u95f4\\n\\t\\tstakedAt[msg.sender] = 0;\\n\\n\\t\\t// \\u5c06\\u4f59\\u989d\\u8f6c\\u56de\\u7ed9\\u7528\\u6237\\n\\t\\t(bool sent, ) = msg.sender.call{ value: userBalance }(\\\"\\\");\\n\\t\\trequire(sent, unicode\\\"\\u5c06\\u7528\\u6237\\u4f59\\u989d\\u8fd4\\u8fd8\\u7ed9\\u7528\\u6237\\u5931\\u8d25\\\");\\n\\n\\t\\t// \\u89e6\\u53d1\\u63d0\\u53d6\\u4e8b\\u4ef6\\n\\t\\temit Withdraw(msg.sender, userBalance);\\n\\t}\\n\\n\\t/**\\n\\t * @notice \\u622a\\u6b62\\u65e5\\u671f\\u5230\\u8fbe\\u524d\\u5269\\u4f59\\u7684\\u79d2\\u6570\\n\\t */\\n\\tfunction timeLeft() public view returns (uint256 timeleft) {\\n\\t\\tif (block.timestamp >= deadline) {\\n\\t\\t\\treturn 0;\\n\\t\\t} else {\\n\\t\\t\\treturn deadline - block.timestamp;\\n\\t\\t}\\n\\t}\\n\\n\\t// \\u6dfb\\u52a0 `receive()` \\u7279\\u6b8a\\u51fd\\u6570\\uff0c\\u63a5\\u6536 ETH \\u5e76\\u8c03\\u7528 stake()\\n\\treceive() external payable {\\n\\t\\tstake();\\n\\t}\\n\\n\\t/**\\n\\t * @notice \\u524d\\u7aef\\u901a\\u8fc7\\u83b7\\u53d6\\u7528\\u6237\\u7684\\u8d28\\u62bc\\u65f6\\u95f4\\u6765\\u5b9e\\u65f6\\u8ba1\\u7b97\\u5956\\u52b1\\n\\t *  \\u7528\\u6237\\u7684\\u5956\\u52b1\\u4ece\\u524d\\u7aef\\u4f20\\u9012\\u5230\\u5408\\u7ea6\\u901a\\u8fc7withdrawReward()\\u65b9\\u6cd5\\u63d0\\u53d6\\n\\t */\\n\\tfunction withdrawReward(uint256 amount) public {\\n\\t\\t// \\u68c0\\u67e5\\u5916\\u90e8\\u5408\\u7ea6\\u662f\\u5426\\u5df2\\u5b8c\\u6210\\n\\t\\trequire(\\n\\t\\t\\texampleExternalContract.completed(),\\n\\t\\t\\tunicode\\\"\\u6ca1\\u6709\\u6267\\u884c\\u8d28\\u62bc\\uff0c\\u65e0\\u6cd5\\u63d0\\u53d6\\u5956\\u52b1\\\"\\n\\t\\t);\\n\\n\\t\\t// \\u91cd\\u7f6e\\u7528\\u6237\\u7684\\u8d28\\u62bc\\u65f6\\u95f4\\n\\t\\t// stakedAt[msg.sender] = block.timestamp; \\u524d\\u7aef\\u91cd\\u7f6e\\n\\n\\t\\t// \\u5916\\u90e8\\u5408\\u7ea6\\u8f6c\\u8d26\\u5956\\u52b1\\n\\t\\texampleExternalContract.payReward(payable(msg.sender), amount);\\n\\n\\t\\t// \\u89e6\\u53d1\\u63d0\\u53d6\\u4e8b\\u4ef6\\n\\t\\temit Reward(msg.sender, amount);\\n\\t}\\n}\\n\",\"keccak256\":\"0x9daa9547d3816e3e3c7f32560eb390d795bec84c37bee60de1c0f13b71fb365d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1149,"contract":"contracts/Staker.sol:Staker","label":"exampleExternalContract","offset":0,"slot":"0","type":"t_contract(ExampleExternalContract)1141"},{"astId":1153,"contract":"contracts/Staker.sol:Staker","label":"balances","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"},{"astId":1162,"contract":"contracts/Staker.sol:Staker","label":"deadline","offset":0,"slot":"2","type":"t_uint256"},{"astId":1166,"contract":"contracts/Staker.sol:Staker","label":"stakedAt","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(ExampleExternalContract)1141":{"encoding":"inplace","label":"contract ExampleExternalContract","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"合约构造函数"},"execute()":{"notice":"执行外部合约的方法"},"stake()":{"notice":"更新用户余额的质押方法"},"timeLeft()":{"notice":"截止日期到达前剩余的秒数"},"withdraw()":{"notice":"允许用户从合约中提取余额的方法，仅在截止日期已到但质押未完成时"},"withdrawReward(uint256)":{"notice":"前端通过获取用户的质押时间来实时计算奖励  用户的奖励从前端传递到合约通过withdrawReward()方法提取"}},"notice":"一个允许用户质押 ETH 的合约","version":1}}}}}}